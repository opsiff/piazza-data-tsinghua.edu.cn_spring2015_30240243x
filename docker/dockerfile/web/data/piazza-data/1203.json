{"aid": "jg3a920oo0m15g", "result": {"status": "active", "unique_views": 13, "request_instructor_me": false, "change_log": [{"type": "create", "anon": "no", "when": "2018-04-17T02:59:48Z", "data": "jg32y7epkgb12r", "uid": "it2wrxu13f13sy"}, {"type": "update", "anon": "no", "when": "2018-04-17T03:23:13Z", "data": "jg33sbicf0x61h", "uid": "it2wrxu13f13sy"}], "upvote_ids": [], "id": "jg32y7emhxp12q", "bookmarked": 1, "tags": ["2018", "student"], "i_edits": [], "is_bookmarked": false, "children": [], "nr": 1203, "bucket_order": 2, "type": "note", "folders": ["2018"], "no_answer_followup": 0, "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2018-04-17T02:59:48Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1523946252408, "tag_good": [{"name": "Yu Chen", "admin": true, "photo": "1378950179_35.png", "endorser": {}, "us": false, "email": "yuchen@mail.tsinghua.edu.cn", "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "role": "instructor", "admin_permission": 10, "facebook_id": null, "id": "hcrrjuyequh4bt", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hcrrjuyequh4bt/1378950179_35.png"}, {"name": "Wende Tan", "admin": false, "photo": null, "endorser": {}, "facebook_id": null, "us": false, "email": "twd15@mails.tsinghua.edu.cn", "class_sections": ["os2018spring_i5j09fnsl7k5x0"], "role": "student", "published": true, "id": "isu0wqaoff5125", "photo_url": null}], "tag_good_arr": ["isu0wqaoff5125", "hcrrjuyequh4bt"], "history": [{"content": "<p>今天讲os期中3.3题时有同学提到ucore会在页替换后将TLB全部flush掉&#xff0c;我觉得他说的是错的。经过查找ucore实现代码可以看到&#xff0c;在缺页处理中只是把这个地址对应的tlb entry置为无效&#xff0c;用到的是invlpg这个指令。</p>\n<p></p>\n<p>需要注意的是&#xff0c;这个指令可能会把多个tlb entry置为无效&#xff0c;见如下的intel手册描述&#xff1a;</p>\n<p></p>\n<p><a href=\"https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf\">https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf</a></p>\n<p></p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/it2wrxu13f13sy/jg32gv2af5hl/tlb.png\" alt=\"\" /></p>\n<p></p>\n<p></p>\n<p>此外&#xff0c;课下与陈渝老师交流时陈老师说进程切换在切换页表时会把tlb整个flush掉。经过查询&#xff0c;这样的刷新方式是因为在x86_32中&#xff1a;</p>\n<p></p>\n<p><strong>向cr3寄存器写入值时&#xff0c;会导致处理器自动刷新非全局页的TLB表项。</strong></p>\n<p><strong></strong></p>\n<p><strong></strong></p>\n<p>补充&#xff1a;根据陈康老师的描述&#xff1a;</p>\n<p></p>\n<p>PCID&#xff08;进程上下文标识符&#xff09;是在Westmere架构引入的新特性。简单来说&#xff0c;在此之前&#xff0c;TLB是单纯的VA到PA的转换表&#xff0c;进程1和进程2的VA对应的PA不同&#xff0c;不能放在一起。加上PCID后&#xff0c;转换变成VA &#43; 进程上下文ID到PA的转换表&#xff0c;放在一起完全没有问题了。这样进程1和进程2的页表可以和谐的在TLB中共处&#xff0c;进程在它们之前切换完全不需要预热了&#xff01;</p>\n<p></p>\n<p>所以新的加载CR3的过程变成了&#xff1a;如果CR4的PCID=1&#xff0c;加载CR3就不需要Flush TLB。</p>\n<p></p>\n<p>PCID这么好的技术也有副作用。在它之前的日子里&#xff0c;Linux在多核CPU上调度进程时候&#xff0c;因为每次进程调度都会刷掉进程用户空间的TLB&#xff0c;并没有什么问题。而加入PCID之后&#xff0c;没有人会主动刷TLB&#xff0c;而进程可以在CPU核心之间调度&#xff0c;这样一来进程的页表项可能出现在很多CPU核心中。这时&#xff0c;如果我们要更改页表属性或者删除页表&#xff0c;光干掉本CPU的TLB项还不够&#xff0c;还要去清掉别的CPU核心的TLB项。而这个动作只能够通过发送IPI的方式让别的CPU核心自己干&#xff0c;十分耗时且复杂。</p>\n<p>这就是TLB shootdown名字的由来。脑补一个画面&#xff0c;一个CPU核心坐在地上&#xff0c;用高射机枪打别的内核TLB里面细小的页表。这也是linux中的懒惰刷新tlb模式&#xff0c;即利用PCID&#43;TLB。</p>", "anon": "no", "created": "2018-04-17T03:23:13Z", "uid": "it2wrxu13f13sy", "subject": "关于x86_32的tlb更新"}, {"content": "<p>今天讲os期中3.3题时有同学提到ucore会在页替换后将TLB全部flush掉&#xff0c;我觉得他说的是错的。经过查找ucore实现代码可以看到&#xff0c;在缺页处理中只是把这个地址对应的tlb entry置为无效&#xff0c;用到的是invlpg这个指令。</p>\n<p></p>\n<p>需要注意的是&#xff0c;这个指令可能会把多个tlb entry置为无效&#xff0c;见如下的intel手册描述&#xff1a;</p>\n<p></p>\n<p><a href=\"https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf\">https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf</a></p>\n<p></p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/it2wrxu13f13sy/jg32gv2af5hl/tlb.png\" alt=\"\" /></p>\n<p></p>\n<p></p>\n<p>此外&#xff0c;课下与陈渝老师交流时陈老师说进程切换在切换页表时会把tlb整个flush掉。经过查询&#xff0c;这样的刷新方式是因为在x86_32中&#xff1a;</p>\n<p></p>\n<p><strong>向cr3寄存器写入值时&#xff0c;会导致处理器自动刷新非全局页的TLB表项。</strong></p>", "anon": "no", "created": "2018-04-17T02:59:48Z", "uid": "it2wrxu13f13sy", "subject": "关于x86_32的tlb更新"}]}, "error": null}