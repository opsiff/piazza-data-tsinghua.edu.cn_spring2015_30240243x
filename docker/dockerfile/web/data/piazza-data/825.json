{"aid": "indazgbkkxlec", "result": {"folders": ["lab6"], "unique_views": 17, "no_answer": 1, "change_log": [{"data": "incu4zzvj8d47y", "anon": "no", "when": "2016-04-23T07:39:23Z", "uid": "i0nuu5yhgno5tv", "type": "create"}, {"data": "incxjfiggvh5uv", "anon": "no", "when": "2016-04-23T09:14:35Z", "uid": "i0nuu5yhgno5tv", "type": "update"}, {"data": "incxnksf96b3al", "anon": "no", "when": "2016-04-23T09:17:48Z", "uid": "i0nuu5yhgno5tv", "type": "update"}, {"data": "incxnvraw2i2jl", "anon": "full", "when": "2016-04-23T09:18:03Z", "type": "update"}, {"data": "incxo72kvu26nw", "anon": "no", "when": "2016-04-23T09:18:17Z", "uid": "i0nuu5yhgno5tv", "type": "update"}, {"data": "incxoix3tz66q2", "anon": "no", "when": "2016-04-23T09:18:33Z", "uid": "i0nuu5yhgno5tv", "type": "update"}, {"data": "incy7euw48xd0", "anon": "no", "when": "2016-04-23T09:33:14Z", "uid": "i0nuu5yhgno5tv", "type": "update"}, {"data": "incyadnrr4d3q1", "anon": "no", "when": "2016-04-23T09:35:32Z", "uid": "i0nuu5yhgno5tv", "type": "update"}], "upvote_ids": [], "id": "incu4zzsoxn47x", "bookmarked": 3, "no_answer_followup": 0, "i_edits": [], "is_bookmarked": false, "children": [], "request_instructor_me": false, "nr": 825, "bucket_order": 2, "config": {}, "status": "active", "tags": ["lab6", "student", "unanswered"], "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-04-23T07:39:23Z", "is_tag_good": false, "type": "question", "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1461425458016, "tag_good": [{"admin_permission": 10, "admin": true, "photo": null, "us": false, "email": "xyong@tsinghua.edu.cn", "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0"], "role": "instructor", "facebook_id": null, "id": "hdjonbiyfs62ie", "name": "Yong XIANG"}], "tag_good_arr": ["hdjonbiyfs62ie"], "history": [{"content": "<p>抱歉刚刚发错了- -刚刚的解释不正确。在自己电脑上测试并没有发现其他同学的问题。</p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:35:32Z"}, {"content": "<p>刚刚发错了- -刚刚的解释不正确。另外在自己电脑上测试并没有发现其他同学的问题。</p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:33:14Z"}, {"content": "<p>刚刚发错了- -刚刚的解释不正确。</p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:18:33Z"}, {"content": "<p></p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:18:17Z"}, {"content": "<p>同问</p>", "anon": "full", "subject": "lab6里面的内存泄露", "created": "2016-04-23T09:18:03Z"}, {"content": "<p>同问</p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:17:48Z"}, {"content": "<p>发现有很多同学问&#xff0c;整理一下。</p>\n<p>lab6中的do_exit函数&#xff0c;没有调用put_kstack的函数&#xff0c;也就是说process的内核栈没有释放&#xff0c;于是就内存泄漏了。</p>\n<p>还可以看do_wait函数&#xff0c;里面就有put_kstack这个过程。</p>\n<p>这个算labx的纠错么= =。</p>\n<pre>int\ndo_exit(int error_code) {\n    if (current == idleproc) {\n        panic(&#34;idleproc exit.\\n&#34;);\n    }\n    if (current == initproc) {\n        panic(&#34;initproc exit.\\n&#34;);\n    }\n    \n    struct mm_struct *mm = current-&gt;mm;\n    if (mm != NULL) {\n        lcr3(boot_cr3);\n        if (mm_count_dec(mm) == 0) {\n            exit_mmap(mm);\n            put_pgdir(mm);\n            mm_destroy(mm);\n        }\n        current-&gt;mm = NULL;\n    }\n    current-&gt;state = PROC_ZOMBIE;\n    current-&gt;exit_code = error_code;\n    put_kstack(current);//这里加上这句话\n    bool intr_flag;\n    struct proc_struct *proc;\n    local_intr_save(intr_flag);\n    {\n        proc = current-&gt;parent;\n        if (proc-&gt;wait_state == WT_CHILD) {\n            wakeup_proc(proc);\n        }\n        while (current-&gt;cptr != NULL) {\n            proc = current-&gt;cptr;\n            current-&gt;cptr = proc-&gt;optr;\n    \n            proc-&gt;yptr = NULL;\n            if ((proc-&gt;optr = initproc-&gt;cptr) != NULL) {\n                initproc-&gt;cptr-&gt;yptr = proc;\n            }\n            proc-&gt;parent = initproc;\n            initproc-&gt;cptr = proc;\n            if (proc-&gt;state == PROC_ZOMBIE) {\n                if (initproc-&gt;wait_state == WT_CHILD) {\n                    wakeup_proc(initproc);\n                }\n            }\n        }\n    }\n    local_intr_restore(intr_flag);\n    \n    schedule();\n    panic(&#34;do_exit will not return!! %d.\\n&#34;, current-&gt;pid);\n}</pre>\n<p></p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T09:14:35Z"}, {"content": "<p>发现有很多同学问&#xff0c;整理一下。</p>\n<p>lab6中的do_exit函数&#xff0c;没有调用put_kstack的函数&#xff0c;也就是说process的内核栈没有释放&#xff0c;于是就内存泄漏了。</p>\n<p>还可以看do_wait函数&#xff0c;里面就有put_kstack这个过程。</p>\n<p>这个算labx的纠错么= =。</p>\n<pre>int\ndo_exit(int error_code) {\n    if (current == idleproc) {\n        panic(&#34;idleproc exit.\\n&#34;);\n    }\n    if (current == initproc) {\n        panic(&#34;initproc exit.\\n&#34;);\n    }\n    \n    struct mm_struct *mm = current-&gt;mm;\n    if (mm != NULL) {\n        lcr3(boot_cr3);\n        if (mm_count_dec(mm) == 0) {\n            exit_mmap(mm);\n            put_pgdir(mm);\n            mm_destroy(mm);\n        }\n        current-&gt;mm = NULL;\n    }\n    current-&gt;state = PROC_ZOMBIE;\n    current-&gt;exit_code = error_code;\n    \n    bool intr_flag;\n    struct proc_struct *proc;\n    local_intr_save(intr_flag);\n    {\n        proc = current-&gt;parent;\n        if (proc-&gt;wait_state == WT_CHILD) {\n            wakeup_proc(proc);\n        }\n        while (current-&gt;cptr != NULL) {\n            proc = current-&gt;cptr;\n            current-&gt;cptr = proc-&gt;optr;\n    \n            proc-&gt;yptr = NULL;\n            if ((proc-&gt;optr = initproc-&gt;cptr) != NULL) {\n                initproc-&gt;cptr-&gt;yptr = proc;\n            }\n            proc-&gt;parent = initproc;\n            initproc-&gt;cptr = proc;\n            if (proc-&gt;state == PROC_ZOMBIE) {\n                if (initproc-&gt;wait_state == WT_CHILD) {\n                    wakeup_proc(initproc);\n                }\n            }\n        }\n    }\n    local_intr_restore(intr_flag);\n    \n    schedule();\n    panic(&#34;do_exit will not return!! %d.\\n&#34;, current-&gt;pid);\n}</pre>\n<p></p>", "anon": "no", "subject": "lab6里面的内存泄露", "uid": "i0nuu5yhgno5tv", "created": "2016-04-23T07:39:23Z"}]}, "error": null}