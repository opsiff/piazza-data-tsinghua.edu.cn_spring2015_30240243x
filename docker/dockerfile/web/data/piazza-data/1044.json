{"aid": "j1dpecogtf2i5", "result": {"status": "active", "unique_views": 8, "request_instructor_me": false, "change_log": [{"type": "create", "anon": "no", "when": "2017-04-11T05:40:48Z", "data": "j1d4c7s9yny18i", "uid": "ikjdo9jtz0e2jq"}, {"type": "update", "anon": "no", "when": "2017-04-11T15:27:26Z", "data": "j1dpam2suczaw", "uid": "hdjonbiyfs62ie"}], "upvote_ids": [], "id": "j1d4c7s76qf18h", "bookmarked": 2, "tags": ["2017", "lecture13", "student"], "i_edits": [], "is_bookmarked": false, "children": [], "nr": 1044, "bucket_order": 2, "type": "note", "folders": ["lecture13", "2017"], "no_answer_followup": 0, "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2017-04-11T05:40:48Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1491924620464, "tag_good": [{"name": "Yong XIANG", "admin": true, "photo": null, "us": false, "id": "hdjonbiyfs62ie", "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0"], "role": "instructor", "facebook_id": null, "email": "xyong@tsinghua.edu.cn", "admin_permission": 10}], "tag_good_arr": ["hdjonbiyfs62ie"], "history": [{"content": "<p>一、在kern_init--&gt;proc_init--&gt;kernel_thread函数中&#xff0c;创建了一个虚假的trapframe tf&#xff0c;并做了几件重要事情&#xff1a;</p>\n<p>1. 将tf中的reg_ebx设为fn&#xff08;即init_main&#xff09;&#xff0c;</p>\n<p>2. 将tf中的reg_edx设为fn的args&#xff0c;</p>\n<p>3. 将tf中的tf_eip设为kernel_thread_entry&#xff1b;</p>\n<p>二、然后在do_fork--&gt;copy_thread函数中&#xff0c;将以上tf拷贝给子进程的proc-&gt;tf&#xff0c;并将proc-&gt;context.eip设为forkret。&#xff08;注意tf.tf_eip和proc-&gt;context.eip不同&#xff09;</p>\n<p>三、然后在kern_init--&gt;cpu_idle--&gt;schedule--&gt;proc_run--&gt;switch_to函数中&#xff0c;通过汇编next-&gt;context.eip压栈&#xff0c;即将返回地址的内容篡改成forkret。通过switch_to函数最后的ret指令&#xff0c;执行流程到达forkret。</p>\n<p>四、forkret调用forkerts&#xff0c;这个汇编函数将esp设为了上述的虚假trapframe&#xff0c;用popal指令将寄存器值设成了该trapframe中的值&#xff0c;然后iret指令返回到了tf.tf_eip即kernel_thread_entry。</p>\n<p>五、在kernel_thread_entry中先将edx&#xff08;即args&#xff09;压栈&#xff0c;然后调用ebx函数&#xff08;即init_main&#xff09;函数&#xff0c;最后调用do_exit函数。</p>\n<p>六、不敢说以上过程全面透彻&#xff0c;欢迎补充。</p>", "anon": "no", "created": "2017-04-11T15:27:26Z", "uid": "hdjonbiyfs62ie", "subject": "理解Lab4中的第一次线程切换"}, {"content": "<p>一、在kern_init--&gt;proc_init--&gt;kernel_thread函数中&#xff0c;创建了一个虚假的trapframe tf&#xff0c;并做了几件重要事情&#xff1a;</p>\n<p>1. 将tf中的reg_ebx设为fn&#xff08;即init_main&#xff09;&#xff0c;</p>\n<p>2. 将tf中的reg_edx设为fn的args&#xff0c;</p>\n<p>3. 将tf中的tf_eip设为kernel_thread_entry&#xff1b;</p>\n<p>二、然后在do_fork--&gt;copy_thread函数中&#xff0c;将以上tf拷贝给子进程的proc-&gt;tf&#xff0c;并将proc-&gt;context.eip设为forkret。&#xff08;注意tf.tf_eip和proc-&gt;context.eip不同&#xff09;</p>\n<p>三、然后在kern_init--&gt;cpu_idle--&gt;schedule--&gt;proc_run--&gt;switch_to函数中&#xff0c;通过汇编next-&gt;context.eip压栈&#xff0c;即将返回地址的内容篡改成forkret。通过switch_to函数最后的ret指令&#xff0c;执行流程到达forkret。</p>\n<p>四、forkret调用forkerts&#xff0c;这个汇编函数将esp设为了上述的虚假trapframe&#xff0c;用popal指令将寄存器值设成了该trapframe中的值&#xff0c;然后iret指令返回到了tf.tf_eip即kernel_thread_entry。</p>\n<p>五、在kernel_thread_entry中先将edx&#xff08;即args&#xff09;压栈&#xff0c;然后调用ebx函数&#xff08;即init_main&#xff09;函数&#xff0c;最后调用do_exit函数。</p>\n<p>六、不敢说以上过程全面透彻&#xff0c;欢迎补充。</p>", "anon": "no", "created": "2017-04-11T05:40:48Z", "uid": "ikjdo9jtz0e2jq", "subject": "理解Lab4中的第一次线程切换"}]}, "error": null}