{"aid": "jdb9eirb5622vf", "result": {"status": "active", "unique_views": 1, "request_instructor_me": false, "change_log": [{"type": "create", "anon": "no", "when": "2018-02-06T03:36:45Z", "data": "jdb3g38boc82ev", "uid": "jdb1qcczPBFn"}], "upvote_ids": [], "id": "jdb3g385ign2eu", "bookmarked": 1, "no_answer": 1, "i_edits": [], "is_bookmarked": false, "children": [], "nr": 1119, "bucket_order": 2, "type": "question", "folders": ["lab1"], "no_answer_followup": 0, "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "tags": ["lab1", "student", "unanswered"], "created": "2018-02-06T03:36:45Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1517898210167, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>在做lab1 练习6时&#xff0c;有几点疑问</p>\n<p></p>\n<p>1.为何extern uintptr_t __vectors[] 可以识别到在汇编文件vectors.S中定义的数组&#xff1f;</p>\n<p></p>\n<p>2.SETGATE的宏定义为 SETGATE(gate, istrap, sel, off, dpl) </p>\n<p>   为什么第三个参数填GD_KTEXT 就表示GDT的段选择子呢&#xff1f;</p>\n<p>   GD_KTEXT这个宏的值是如何确定的&#xff1f;为何是8&#xff1f;</p>\n<p>   为何__vectors[i]数组里的内容就是 中断服务程序的偏移地址             OFFSET&#xff1f;</p>\n<p></p>\n<p>3.struct gatedesc{} 该结构体有何用处&#xff1f; 结构体数组idt如何被调用&#xff1f;&#xff08;虽然已经知道 中断发生后&#xff0c;会根据中断号查询IDT&#xff0c;但是在代码中如何体现&#xff1f; 中断号--&gt;IDT--&gt;GDT--&gt;基址&#43;OFFSET=ISR入口地址 找到入口地址之前的函数具体如何调用的能否讲解&#xff1f;&#xff09;</p>\n<p></p>\n<p>4.idt的起始地址为何是这样定义&#xff1f;</p>\n<pre>struct pseudodesc idt_pd = {\n    sizeof(idt) - 1, (uintptr_t)idt\n};</pre>\n<p>5.有时候流程理解了&#xff0c;但是代码中有很多数据结构不知道为什么是这么定义的&#xff0c;怎么办&#xff1f;</p>\n<p>比如说上面提到的gatedesc 以及memlayout.h中的global segment numbers ,global descriptor numbers等宏定义</p>", "anon": "no", "created": "2018-02-06T03:36:45Z", "uid": "jdb1qcczPBFn", "subject": "关于idt_init()中的SETGATE宏的疑问"}]}, "error": null}