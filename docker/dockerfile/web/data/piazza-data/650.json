{"aid": "iln9raqmh4g189", "result": {"folders": ["lab3", "lab4", "lab5"], "unique_views": 71, "request_instructor_me": false, "change_log": [{"data": "ilbnb6avr7b61s", "anon": "full", "when": "2016-03-03T02:21:03Z", "type": "create"}, {"to": "ilbnb6atg1l61r", "anon": "no", "when": "2016-03-03T06:36:17Z", "uid": "i76z9sx78G8", "type": "followup"}, {"to": "ilbnb6atg1l61r", "anon": "full", "when": "2016-03-03T12:43:17Z", "type": "feedback"}], "upvote_ids": [], "id": "ilbnb6atg1l61r", "bookmarked": 4, "no_answer_followup": 0, "i_edits": [], "is_bookmarked": false, "children": [{"folders": [], "updated": "2016-03-03T06:36:17Z", "no_upvotes": 0, "uid": "i76z9sx78G8", "created": "2016-03-03T06:36:17Z", "type": "followup", "no_answer": 0, "id": "ilbwfes0i5g64a", "anon": "no", "bucket_name": "This week", "config": {}, "bucket_order": 4, "data": null, "children": [{"folders": [], "updated": "2016-03-03T12:43:17Z", "created": "2016-03-03T12:43:17Z", "config": {}, "children": [], "anon": "full", "bucket_name": "This week", "type": "feedback", "bucket_order": 4, "data": null, "id": "ilc9jdd25wpjh", "subject": "<p>但是lab3老师给的代码中使用了, 所以我觉得有问题, 应该照着第七条的改一下</p>"}], "subject": "<p></p><pre>check_mm_struct 就是为了检查代码是否正确而设置的一个特殊的mm&#xff0c;所以在检查结束以后就不会再使用了</pre>"}], "nr": 650, "bucket_order": 2, "config": {}, "status": "active", "tags": ["lab3", "lab4", "lab5", "student"], "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-03-03T02:21:03Z", "is_tag_good": false, "type": "note", "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1457674495006, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>1. kern/mm/pmm.c:pgdir_alloc_page函数是在指定的页目录表中分配一个物理页,</p>\n<p>2. lab3在这里添加了这样一段代码:</p>\n<pre>        if (swap_init_ok){\n            swap_map_swappable(check_mm_struct, la, page, 0);\n            page-&gt;pra_vaddr=la;\n            assert(page_ref(page) == 1);\n        }</pre>\n<p>3. 在swap_init函数中swap_init_ok会被设置为1</p>\n<p>4. 在kern/mm/swap.c:check_swap函数中中:</p>\n<pre>static void\ncheck_swap(void) {<br />...\n     //now we set the phy pages env     \n     struct mm_struct *mm = mm_create();\n     assert(mm != NULL);\n\n     extern struct mm_struct *check_mm_struct;\n     assert(check_mm_struct == NULL);\n\n     check_mm_struct = mm;// 这里是最后一次给check_mm_struct<br />...<br />     mm_destroy(mm); //这里销毁了mm, 但是没有将check_mm_struct赋值为NULL, 但是mm在内存中还存在, 访问mm也不会出错<br />...\n}</pre>\n<p>5. 在发生page fault的时候, do_page_fault函数会调用pgdir_alloc_page(参见第一条), 但是这时候显然check_mm_struct已经被销毁了, 但是由于kfree的实现, 这段内存还是可以访问的, 也不会出错.</p>\n<p></p>\n<p>6. 到了lab5之后第5条中的pgdir_alloc_page会崩溃, diff lab3和lab5的swap.c文件发现:</p>\n<pre>8a9,10<br />&gt; #include &lt;default_pmm.h&gt;<br />&gt; #include &lt;kdebug.h&gt;<br />263c265,267<br />&lt;      <br />---<br />&gt;     free_page(pde2page(pgdir[0]));<br />&gt;      pgdir[0] = 0;<br />&gt;      mm-&gt;pgdir = NULL;<br />265c269,270<br />&lt;          <br />---<br />&gt;      check_mm_struct = NULL; // lab5好像发现了没有设为NULL的问题, 在这里填上了一句, 但是没有backport到lab3, lab4<br />&gt;      </pre>\n<p>7. 这是导致lab5以后pgdir_alloc_page崩溃的原因. 我觉得应该把pgdir_alloc_page添加一个参数, mm_struct, 从而指定使用哪个mm.</p>\n<p></p>", "anon": "full", "subject": "lab3代码中可能的bug", "created": "2016-03-03T02:21:03Z"}]}, "error": null}