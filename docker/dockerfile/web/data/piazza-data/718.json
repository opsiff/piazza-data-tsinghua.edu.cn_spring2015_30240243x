{"aid": "im50biyxase4t2", "result": {"folders": ["lecture9", "课堂问答"], "unique_views": 64, "no_answer": 0, "change_log": [{"data": "im1ba0synpaei", "anon": "no", "when": "2016-03-21T01:26:14Z", "uid": "i0c9nvk0xzc2n3", "type": "create"}, {"data": "im1bal2l3zk1rh", "anon": "no", "when": "2016-03-21T01:26:40Z", "uid": "i0c9nvk0xzc2n3", "type": "update"}, {"to": "im1ba0svd7jeh", "anon": "no", "when": "2016-03-21T02:06:36Z", "uid": "i0gl5kctugw3xi", "type": "followup"}, {"to": "im1ba0svd7jeh", "anon": "no", "when": "2016-03-21T06:12:47Z", "uid": "hcrrjuyequh4bt", "type": "followup"}, {"uid": "hcrrjuyequh4bt", "data": "im1ljmijnr66nb", "when": "2016-03-21T06:13:38Z", "to": "im1ba0svd7jeh", "anon": "no", "type": "i_answer"}, {"to": "im1ba0svd7jeh", "anon": "no", "when": "2016-03-23T08:54:54Z", "uid": "il7co2fpfTV", "type": "followup"}], "upvote_ids": [], "id": "im1ba0svd7jeh", "bookmarked": 6, "no_answer_followup": 1, "i_edits": [], "is_bookmarked": false, "children": [{"folders": [], "updated": "2016-03-21T02:06:36Z", "no_upvotes": 0, "uid": "i0gl5kctugw3xi", "created": "2016-03-21T02:06:36Z", "type": "followup", "no_answer": 0, "id": "im1cpx6pw644b6", "anon": "no", "bucket_name": "This week", "config": {}, "bucket_order": 4, "data": null, "children": [], "subject": "<p>所以是否可以这样理解&#xff0c;操作系统内核的算法效率的评价只使用用大O是不合适的&#xff0c;我们在之前课程中忽略的常数部分变重要了&#xff1f;</p>"}, {"folders": [], "updated": "2016-03-21T06:12:47Z", "no_upvotes": 0, "uid": "hcrrjuyequh4bt", "created": "2016-03-21T06:12:47Z", "type": "followup", "no_answer": 0, "id": "im1liijokx967k", "anon": "no", "bucket_name": "This week", "config": {}, "bucket_order": 4, "data": null, "children": [], "subject": "<p>是的。算法实现要考虑算法所需的输入条件对硬件带来的成本&#xff0c;复杂性等方面的情况。</p>"}, {"folders": [], "is_tag_endorse": false, "created": "2016-03-21T06:13:38Z", "config": {}, "tag_endorse_arr": [], "children": [], "bucket_name": "Today", "type": "i_answer", "tag_endorse": [], "bucket_order": 2, "data": {"embed_links": []}, "id": "im1ljmig7dd6na", "history": [{"content": "<p>算法实现要考虑算法所需的输入条件对硬件带来的成本&#xff0c;复杂性等方面的情况。</p>", "anon": "no", "subject": "", "uid": "hcrrjuyequh4bt", "created": "2016-03-21T06:13:38Z"}]}, {"folders": [], "updated": "2016-03-23T08:54:54Z", "no_upvotes": 0, "uid": "il7co2fpfTV", "created": "2016-03-23T08:54:54Z", "type": "followup", "no_answer": 1, "id": "im4m6pw18131z0", "anon": "no", "bucket_name": "Today", "config": {}, "bucket_order": 2, "data": null, "children": [], "subject": "<p></p>\n<p style=\"text-align:left\">我觉得主要的问题是&#xff0c;如果这样做的话&#xff0c;即使不考虑硬件上的实现难度&#xff0c;每次访问一个内存地址都可能需要调整链表。这样的话每一次访问都会需要多次额外内存访问&#xff0c;而且链表的访问很可能是cache低效的。这样的开销应该是得不偿失的</p>"}], "request_instructor_me": false, "nr": 718, "bucket_order": 2, "config": {}, "status": "active", "tags": ["lecture9", "student", "课堂问答"], "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-03-21T01:26:14Z", "is_tag_good": false, "type": "question", "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1458747033801, "tag_good": [{"admin_permission": 10, "admin": true, "photo": null, "us": false, "email": "xyong@tsinghua.edu.cn", "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0"], "role": "instructor", "facebook_id": null, "id": "hdjonbiyfs62ie", "name": "Yong XIANG"}], "tag_good_arr": ["hdjonbiyfs62ie"], "history": [{"content": "<p>视频里面说LRU算法的开销大&#xff0c;我理解的是说算法的时间开销大。但是&#xff0c;其实可以用空间换时间&#xff0c;使得时间开销下降&#xff0c;有可能比时钟算法&#xff0c;LFU算法等开销都好。</p>\n<p></p>\n<p>我们用一个双向链表维护那个栈&#xff0c;链表中的每一项代表着一个页&#xff0c;链表的头部是最近使用的页面&#xff0c;在需要页面调度的时候&#xff0c;我们只需要把链表的尾部调出内存。</p>\n<p></p>\n<p>在访问某个页的时候&#xff0c;我们需要在链表中找到该页&#xff0c;并把它移到链表的头部。这里我们使用一个辅助的映射表&#xff0c;建立每个页和它在链表中对应元素的地址的映射&#xff0c;这样我们就可以快速的找到该页&#xff0c;把它移出链表&#xff0c;再移到头部。</p>\n<p></p>\n<p>最后访存和页面调度的时间复杂度都是O(1)的。</p>\n<p></p>\n<p>但是这样的话&#xff0c;在访问某页的时候&#xff0c;需要修改的东西很多&#xff0c;这些事如果由CPU来做的话&#xff0c;太麻烦&#xff0c;如果由操作系统做的话&#xff0c;又需要另外的机制&#xff0c;因为访存是非常频繁的。其他的方法&#xff0c;如时钟算法&#xff0c;则可以直接由CPU修改页表项的某些位即可。综上&#xff0c;我们说LRU的算法开销大。</p>\n<p></p>\n<p></p>\n<p></p>", "anon": "no", "subject": "关于LRU算法的花销问题", "uid": "i0c9nvk0xzc2n3", "created": "2016-03-21T01:26:40Z"}, {"content": "<p>视频里面说LRU算法的开销大&#xff0c;我理解的是说算法的时间开销大。但是&#xff0c;其实可以用空间换时间&#xff0c;使得时间开销下降&#xff0c;有可能比时钟算法&#xff0c;LFU算法等开销都好。</p>\n<p></p>\n<p>  我们用一个双向链表维护那个栈&#xff0c;链表中的每一项代表着一个页&#xff0c;链表的头部是最近使用的页面&#xff0c;在需要页面调度的时候&#xff0c;我们只需要把链表的尾部调出内存。</p>\n<p>  在访问某个页的时候&#xff0c;我们需要在链表中找到该页&#xff0c;并把它移到链表的头部。这里我们使用一个辅助的映射表&#xff0c;建立每个页和它在链表中对应元素的地址的映射&#xff0c;这样我们就可以快速的找到该页&#xff0c;把它移出链表&#xff0c;再移到头部。</p>\n<p>  最后访存和页面调度的时间复杂度都是O(1)的。</p>\n<p></p>\n<p>   但是这样的话&#xff0c;在访问某页的时候&#xff0c;需要修改的东西很多&#xff0c;这些事如果由CPU来做的话&#xff0c;太麻烦&#xff0c;如果由操作系统做的话&#xff0c;又需要另外的机制&#xff0c;因为访存是非常频繁的。其他的方法&#xff0c;如时钟算法&#xff0c;则可以直接由CPU修改页表项的某些位即可。综上&#xff0c;我们说LRU的算法开销大。</p>\n<p></p>\n<p></p>\n<p></p>", "anon": "no", "subject": "关于LRU算法的花销问题", "uid": "i0c9nvk0xzc2n3", "created": "2016-03-21T01:26:14Z"}]}, "error": null}