{"aid": "j089mpufu3rfm", "result": {"status": "active", "unique_views": 34, "request_instructor_me": false, "change_log": [{"type": "create", "anon": "no", "when": "2017-03-10T09:29:14Z", "data": "j03meq2wpo17gw", "uid": "ie7xxz4di3o1ke"}, {"type": "update", "anon": "no", "when": "2017-03-13T02:33:10Z", "data": "j07hv7a22y854j", "uid": "ie7xy5sipx51qz"}, {"type": "update", "anon": "no", "when": "2017-03-13T02:33:25Z", "data": "j07hvir9o7k4qa", "uid": "ie7xy5sipx51qz"}], "upvote_ids": [], "id": "j03meq2uhq17gv", "bookmarked": 5, "tags": ["lecture6", "student"], "i_edits": [], "is_bookmarked": false, "children": [], "nr": 1005, "bucket_order": 2, "type": "note", "folders": ["lecture6"], "no_answer_followup": 0, "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2017-03-10T09:29:14Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1489419023703, "tag_good": [{"name": "Yong XIANG", "admin": true, "photo": null, "us": false, "id": "hdjonbiyfs62ie", "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0"], "role": "instructor", "facebook_id": null, "email": "xyong@tsinghua.edu.cn", "admin_permission": 10}, {"name": "Li Zeyan", "admin": false, "photo": null, "us": false, "id": "ie7xy3gqo731oq", "role": "student", "facebook_id": null, "email": "zy-li14@mails.tsinghua.edu.cn"}], "tag_good_arr": ["hdjonbiyfs62ie", "ie7xy3gqo731oq"], "history": [{"content": "<p>采用单级页表时&#xff0c;假设一个进程需要使用全部的4G空间&#xff0c;页大小为4KB&#xff0c;那么会产生$$2^{20}$$个页表项&#xff0c;因此需要开辟这么多空间用来存储这些页表项。这些空间必须在进程启动时被一次性分配完毕。<br />而采用多级页表时会形成树状结构。如果某个节点下的所有页表项均没有被使用&#xff0c;则我们无需开辟这部分的空间。可以随着实际需要开辟。因此节省了用来存储页表项的空间。<br /><br />以上两种情况的差异&#xff0c;体现的是存储页表项的空间开支&#xff1b;而对于实际的内存开支&#xff0c;两种情况都会随着实际情况变化。</p>", "anon": "no", "created": "2017-03-13T02:33:25Z", "uid": "ie7xy5sipx51qz", "subject": "关于多级页表节省空间的细节"}, {"content": "<p>采用单级页表时&#xff0c;假设一个进程需要使用全部的4G空间&#xff0c;页大小为4KB&#xff0c;那么会产生$2^{20}$个页表项&#xff0c;因此需要开辟这么多空间用来存储这些页表项。这些空间必须在进程启动时被一次性分配完毕。<br />而采用多级页表时会形成树状结构。如果某个节点下的所有页表项均没有被使用&#xff0c;则我们无需开辟这部分的空间。可以随着实际需要开辟。因此节省了用来存储页表项的空间。<br /><br />以上两种情况的差异&#xff0c;体现的是存储页表项的空间开支&#xff1b;而对于实际的内存开支&#xff0c;两种情况都会随着实际情况变化。</p>", "anon": "no", "created": "2017-03-13T02:33:10Z", "uid": "ie7xy5sipx51qz", "subject": "关于多级页表节省空间的细节"}, {"content": "<p>采用单级页表时&#xff0c;假设一个进程需要使用全部的4G空间&#xff0c;页大小为4KB&#xff0c;那么会产生2^20个页表项&#xff0c;因此需要开辟这么多空间用来存储这些页表项。这些空间必须在进程启动时被一次性分配完毕。</p>\n<p>而采用多级页表时会形成树状结构。如果某个节点下的所有页表项均没有被使用&#xff0c;则我们无需开辟这部分的空间。可以随着实际需要开辟。因此节省了用来存储页表项的空间。</p>\n<p></p>\n<p>以上两种情况的差异&#xff0c;体现的是存储页表项的空间开支&#xff1b;而对于实际的内存开支&#xff0c;两种情况都会随着实际情况变化。</p>", "anon": "no", "created": "2017-03-10T09:29:14Z", "uid": "ie7xxz4di3o1ke", "subject": "关于多级页表节省空间的细节"}]}, "error": null}