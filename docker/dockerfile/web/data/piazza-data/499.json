{"aid": "igkq7b8trwjvz", "error": null, "result": {"default_anonymity": "no", "status": "active", "i_edits": [], "q_edits": [], "bookmarked": 2, "request_instructor": 0, "history": [{"uid": "i1gf2bzq1ni677", "anon": "no", "created": "2015-07-13T00:45:05Z", "content": "<p>BIOS是PC最先启动的程序&#xff0c;而且BIOS是可以更新的&#xff0c;那么用BIOS来启动操作系统的话会方便的多。</p>\n<p>现在的机制是&#xff0c;BIOS执行完硬件检查后到磁盘第一个扇区读取操作系统的bootloader&#xff0c;由于这种方法只会启动第一个操作系统&#xff0c;于是多了grub这样的用来启动多个操作系统的小程序&#xff0c;而这个程序本身要被最先启动的话也得修改磁盘第一个扇区的内容。因此grub本身也不安全。因为当安装了grub这样的程序后&#xff0c;后续安装的操作系统若把自己的bootloader放到磁盘第一个扇区的话&#xff0c;grub便不起作用了。</p>\n<p>我的想法是&#xff0c;既然BIOS是第一个被执行的程序&#xff0c;而且也可以被修改&#xff0c;那么将启动操作系统的工作交给BIOS来执行&#xff0c;这样一来BIOS知道磁盘中那些操作系统的位置&#xff0c;我们便可以修改BIOS启动操作系统的顺序来启动默认的操作系统。如果不想每次通过设置BIOS来切换操作系统&#xff0c;那也可以再另外使用grub这样的程序来选择要启动的操作系统&#xff0c;方法只是把这个程序作为第一个启动项。得益于这种便利性&#xff0c;我们还可以很方便的启动其他程序&#xff0c;而不需要先启动操作系统。</p>\n<p>一个可能的实现方法是&#xff0c;BIOS中开辟一段公共存储区&#xff0c;新安装的操作系统把自己的信息&#xff08;bootloader的地址&#xff0c;操作系统名字和版本&#xff09;按照一定格式写到这块区域内&#xff0c;BIOS启动后读取这片区域的内容&#xff0c;然后用户可以设置这些操作系统的启动顺序&#xff0c;以后BIOS只需要按照用户配置读取指定的内容&#xff08;例如操作系统bootloader的地址&#xff09;到pc&#xff0c;这样便能启动指定操作系统了。</p>\n<p>这种方法的好处很多&#xff0c;例如不用担心磁盘第一个扇区被覆盖&#xff0c;操作系统的bootloader可以随便放&#xff0c;操作系统安装时不用感知其他操作系统的存在&#xff0c;可以不启动操作系统来启动某些程序等等。用户只需要到BIOS设置一下操作系统的启动顺序就行了&#xff0c;根本不用烦恼要先安装哪个操作系统。</p>\n<p>当然&#xff0c;安全起见&#xff0c;往BIOS的那块存储区写东西的话需要先经过安全认证&#xff0c;如果用户不理会&#xff0c;也可以不认证。</p>", "subject": "利用BIOS统一启动操作系统"}], "s_edits": [], "tag_good_arr": [], "is_bookmarked": false, "my_favorite": false, "t": 1446636805805, "children": [], "type": "note", "unique_views": 36, "created": "2015-07-13T00:45:05Z", "id": "ic16uf844op4fg", "tags": ["other", "student"], "nr": 499, "data": {"embed_links": []}, "upvote_ids": [], "is_tag_good": false, "config": {}, "folders": ["other"], "bucket_order": 2, "change_log": [{"uid": "i1gf2bzq1ni677", "when": "2015-07-13T00:45:05Z", "data": "ic16uf87oom4fh", "anon": "no", "type": "create"}], "bucket_name": "Today", "request_instructor_me": false, "no_answer_followup": 0, "num_favorites": 0, "tag_good": []}}