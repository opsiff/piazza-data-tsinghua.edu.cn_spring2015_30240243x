{"aid": "inj0qpavk8j31d", "result": {"folders": ["lecture18"], "unique_views": 50, "no_answer": 1, "change_log": [{"data": "inihytcti9k6nn", "anon": "no", "when": "2016-04-27T06:45:16Z", "uid": "i0ccfx63sir1e", "type": "create"}, {"data": "inii0eeddko4qt", "anon": "no", "when": "2016-04-27T06:46:30Z", "uid": "i0ccfx63sir1e", "type": "update"}, {"to": "inihytcqor96nm", "anon": "no", "when": "2016-04-27T06:57:43Z", "uid": "i0b77lptt0s2tg", "type": "followup"}], "upvote_ids": [], "id": "inihytcqor96nm", "bookmarked": 4, "no_answer_followup": 0, "i_edits": [], "is_bookmarked": false, "children": [{"folders": [], "updated": "2016-04-27T06:57:43Z", "no_upvotes": 0, "uid": "i0b77lptt0s2tg", "created": "2016-04-27T06:57:43Z", "type": "followup", "no_answer": 0, "id": "iniietvj6uj4b2", "anon": "no", "bucket_name": "Today", "config": {}, "bucket_order": 2, "data": null, "children": [], "subject": "<p>非常清楚的解答&#xff0c;赞一个&#xff01;</p>"}], "request_instructor_me": false, "nr": 839, "bucket_order": 2, "config": {}, "status": "active", "tags": ["lecture18", "student", "unanswered"], "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-04-27T06:45:16Z", "is_tag_good": false, "type": "question", "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1461771050647, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>问题来源</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=835\">https://piazza.com/class/i5j09fnsl7k5x0?cid=835</a></p>\n<p></p>\n<p>参考了一些资料</p>\n<p><a href=\"https://courses.engr.illinois.edu/cs241/sp2012/lectures/25-condition.pdf\">https://courses.engr.illinois.edu/cs241/sp2012/lectures/25-condition.pdf</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/監視器_%28程序同步化%29\">https://zh.wikipedia.org/wiki/監視器_(程序同步化)</a></p>\n<p><a href=\"http://www.ccs.neu.edu/home/lieber/com3336/f99/lectures/l3/l8.one.pdf\">http://www.ccs.neu.edu/home/lieber/com3336/f99/lectures/l3/l8.one.pdf</a></p>\n<p></p>\n<p><strong>25-condition.pdf</strong>中有一张slide整理得不错&#xff1a;</p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i0ccfx63sir1e/inihi8999s91/屏幕快照_20160427_下午2.31.23.png\" width=\"492\" height=\"221\" /></p>\n<p></p>\n<p><strong>wiki</strong>&#xff1a;</p>\n<p>与那些通过修改数据结构实现互斥访问的并发程序设计相比&#xff0c;管程实现很大程度上简化了程序设计。</p>\n<p>管程提供了一种机制&#xff0c;线程可以临时放弃互斥访问&#xff0c;等待某些条件得到满足后&#xff0c;重新获得执行权恢复它的互斥访问。</p>\n<p></p>\n<p><strong>我的理解</strong>&#xff1a;</p>\n<p>1、信号量和条件变量是并发问题的两种处理模型。</p>\n<p>2、信号量将并发的问题抽象为有限的资源&#xff0c;用计数器表示&#xff0c;资源足够时往下走&#xff0c;不够时等待。</p>\n<p>3、条件变量则将并发的问题抽象为事件&#xff0c;当满足某种事件的时候&#xff0c;往下走&#xff0c;不满足某种事件的时候暂时放弃锁。</p>\n<p>4、生产者消费者问题中&#xff0c;可将条件变量的事件设置为“队列满”、“队列空”&#xff0c;那么就如同信号量那样处理了&#xff0c;所以让人看起来觉得没有区别。</p>\n<p></p>\n<p>欢迎大家批评指正&#xff01;:)</p>", "anon": "no", "subject": "Semaphores vs Condition variables", "uid": "i0ccfx63sir1e", "created": "2016-04-27T06:46:30Z"}, {"content": "<p>问题来源</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=835\">https://piazza.com/class/i5j09fnsl7k5x0?cid=835</a></p>\n<p></p>\n<p>参考了一些资料</p>\n<p><a href=\"https://courses.engr.illinois.edu/cs241/sp2012/lectures/25-condition.pdf\">https://courses.engr.illinois.edu/cs241/sp2012/lectures/25-condition.pdf</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/監視器_%28程序同步化%29\">https://zh.wikipedia.org/wiki/監視器_(程序同步化)</a></p>\n<p><a href=\"http://www.ccs.neu.edu/home/lieber/com3336/f99/lectures/l3/l8.one.pdf\">http://www.ccs.neu.edu/home/lieber/com3336/f99/lectures/l3/l8.one.pdf</a></p>\n<p></p>\n<p><strong>25-condition.pdf</strong>中有一张slide整理得不错&#xff1a;</p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i0ccfx63sir1e/inihi8999s91/屏幕快照_20160427_下午2.31.23.png\" width=\"492\" height=\"221\" /></p>\n<p></p>\n<p><strong>wiki</strong>&#xff1a;</p>\n<p>与那些通过修改数据结构实现互斥访问的并发程序设计相比&#xff0c;管程实现很大程度上简化了程序设计。</p>\n<p>管程提供了一种机制&#xff0c;线程可以临时放弃互斥访问&#xff0c;等待某些条件得到满足后&#xff0c;重新获得执行权恢复它的互斥访问。</p>\n<p></p>\n<p><strong>我的理解</strong>&#xff1a;</p>\n<p>1、信号量和条件变量是并发问题的两种处理模型。</p>\n<p>2、信号量将并发的问题抽象为有限的资源&#xff0c;用计数器表示&#xff0c;资源足够时往下走&#xff0c;不够时等待。</p>\n<p>3、条件变量则将并发的问题抽象为事件&#xff0c;当满足某种事件的时候&#xff0c;往下走&#xff0c;不满足某种事件的时候暂时放弃锁。</p>\n<p>4、生产者消费者问题中&#xff0c;可将条件变量的事件设置为“队列满”、“队列空”&#xff0c;那么就如同信号量那样处理了&#xff0c;所以让人看起来觉得没有区别。</p>\n<p></p>\n<p>欢迎大家批评指正&#xff01;:)</p>", "anon": "no", "subject": "Semaphores vs Condition variables", "uid": "i0ccfx63sir1e", "created": "2016-04-27T06:45:16Z"}]}, "error": null}