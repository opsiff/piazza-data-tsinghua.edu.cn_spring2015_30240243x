{"aid": "izo9gsqj5t12x3", "result": {"status": "active", "unique_views": 119, "request_instructor_me": false, "change_log": [{"data": "ilaa5vn1tri3b6", "anon": "full", "when": "2016-03-02T03:25:14Z", "type": "create"}, {"uid": "hdjonbiyfs62ie", "data": "ilabf18wesg1us", "when": "2016-03-02T04:00:21Z", "to": "ilaa5vmzg393b5", "anon": "no", "type": "i_answer"}, {"to": "ilaa5vmzg393b5", "anon": "no", "when": "2016-03-02T04:32:39Z", "uid": "i0ccfx63sir1e", "type": "followup"}, {"to": "ilaa5vmzg393b5", "anon": "no", "when": "2016-03-02T05:01:55Z", "uid": "i0ayxqk6wry734", "type": "followup"}, {"to": "ilaa5vmzg393b5", "anon": "full", "when": "2016-03-02T06:22:57Z", "type": "feedback"}, {"to": "ilaa5vmzg393b5", "anon": "no", "when": "2016-03-02T06:47:17Z", "uid": "i6w84pnmjCQ", "type": "followup"}, {"to": "ilaa5vmzg393b5", "anon": "no", "when": "2016-03-02T06:49:41Z", "uid": "i6w84pnmjCQ", "type": "feedback"}, {"type": "update", "anon": "no", "when": "2017-02-27T02:23:30Z", "data": "iznhcusojh46ze", "uid": "hdjonbiyfs62ie"}], "upvote_ids": [], "id": "ilaa5vmzg393b5", "bookmarked": 9, "no_answer": 0, "i_edits": [], "is_bookmarked": false, "children": [{"folders": [], "is_tag_endorse": false, "created": "2016-03-02T04:00:21Z", "type": "i_answer", "tag_endorse_arr": [], "id": "ilabf18sjga1ur", "bucket_name": "Today", "config": {}, "tag_endorse": [], "bucket_order": 2, "data": {"embed_links": []}, "children": [], "history": [{"content": "<p>第3讲说的是16位CPU的情况&#xff0c;第4讲说的是32位CPU的情况。</p>\n<p>关于CS的结构可以从CPU的手册中查到准确描述。</p>\n<p></p>\n<p><a href=\"http://166.111.68.197:11123/oscourse/OS2016spring/lecture04#X86_CPU.2BYktRjA-\">http://166.111.68.197:11123/oscourse/OS2016spring/lecture04#X86_CPU.2BYktRjA-</a></p>\n<p></p>\n<p>请在看过手册后&#xff0c;能否找你的问题的答案。如果可能&#xff0c;在本帖回复你的理解。</p>", "anon": "no", "created": "2016-03-02T04:00:21Z", "uid": "hdjonbiyfs62ie", "subject": ""}]}, {"folders": [], "updated": "2016-03-02T04:32:39Z", "no_upvotes": 0, "uid": "i0ccfx63sir1e", "created": "2016-03-02T04:32:39Z", "type": "followup", "no_answer": 0, "id": "ilackkhhqu5vw", "anon": "no", "bucket_name": "Week 2/28 - 3/5", "config": {}, "bucket_order": 57, "data": null, "children": [], "subject": "<p>实模式下&#xff0c;physical address = base &#43; eip</p>"}, {"folders": [], "updated": "2016-03-02T05:01:55Z", "no_upvotes": 0, "uid": "i0ayxqk6wry734", "created": "2016-03-02T05:01:55Z", "type": "followup", "no_answer": 0, "id": "iladm6yzvsn3wx", "anon": "no", "bucket_name": "Week 2/28 - 3/5", "config": {}, "bucket_order": 57, "data": null, "children": [{"folders": [], "updated": "2016-03-02T06:22:57Z", "created": "2016-03-02T06:22:57Z", "type": "feedback", "id": "ilagiewcdma17r", "anon": "full", "bucket_name": "Week 2/28 - 3/5", "config": {}, "bucket_order": 57, "data": null, "children": [], "subject": "<p><a href=\"http://f.osdev.org/viewtopic.php?f=13&amp;t=28384\">http://f.osdev.org/viewtopic.php?f=13&amp;t=28384</a> - <b>Brendan的回答</b></p>\n<p>这是个遗留问题, 其实比较新cpu第一条指令应该是在0xFFFFFFF0, 在0xFFFF0处有相同的内容是为了向前兼容.</p>\n<p>在ucore实验的e820map这里也可以看到bios使用了fffc0000-ffffffff这一部分.</p>"}], "subject": "<p>经gdb调试ucore&#xff0c;发现0xfffffff0和0x000ffff0地址处的指令是一样的&#xff0c;貌似最高12位是0是1不影响的样子</p>\n<pre>(gdb) x /2i 0xfffffff0\n   0xfffffff0:  ljmp   $0xf000,$0xe05b\n   0xfffffff5:  xor    %dh,0x322f\n(gdb) x /2i 0x000ffff0\n   0xffff0:     ljmp   $0xf000,$0xe05b\n   0xffff5:     xor    %dh,0x322f</pre>\n<p>两个地址存放的都是启动后的第一条指令</p>\n<p>并且这个现象应该不是由于截断产生的&#xff0c;最高12位会对反汇编出来的指令产生影响</p>\n<pre>(gdb) x /2i 0x111ffff0\n   0x111ffff0:  add    %al,(%bx,%si)\n   0x111ffff2:  add    %al,(%bx,%si)</pre>\n<p></p>"}, {"folders": [], "updated": "2016-03-02T06:47:17Z", "no_upvotes": 0, "uid": "i6w84pnmjCQ", "created": "2016-03-02T06:47:17Z", "type": "followup", "no_answer": 0, "id": "ilahdpmxy0f6oj", "anon": "no", "bucket_name": "Week 2/28 - 3/5", "config": {}, "bucket_order": 57, "data": null, "children": [{"folders": [], "updated": "2016-03-02T06:49:41Z", "uid": "i6w84pnmjCQ", "created": "2016-03-02T06:49:41Z", "type": "feedback", "id": "ilahgsa9coq5p4", "anon": "no", "bucket_name": "Week 2/28 - 3/5", "config": {}, "bucket_order": 57, "data": null, "children": [], "subject": "<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=604\">https://piazza.com/class/i5j09fnsl7k5x0?cid=604</a></p>\n<p>P.S. 这个问题5天前就报告了。</p>"}], "subject": "<p>手册&#xff1a;您无权阅读此页。</p>"}], "nr": 645, "bucket_order": 2, "type": "question", "folders": ["lab1", "课堂问答", "2016"], "no_answer_followup": 0, "num_favorites": 3, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "tags": ["2016", "lab1", "student", "课堂问答"], "created": "2016-03-02T03:25:14Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1488209423995, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>第3讲关于启动顺序的视频里说&#xff0c;系统加电启动后CS寄存器设为F000&#xff0c;EIP设为FFF0。然后CS左移4位加上EIP得到FFFF0是第一条指令的地址。</p>\n<p>第4讲第一节又说系统启动后CS是F000&#xff0c;CS的base是FFFF0000&#xff0c;EIP是0000FFF0&#xff0c;CS的base加上EIP得到FFFFFFF0.之后又说CS:IP的意思就是CS一个16位的地址左移4位得到20位的地址加上IP这个offset</p>\n<p>这个CS的base是什么意思&#xff1f;之前好像从来没讲过&#xff1f;CS这种段寄存器到底是什么样的结构&#xff1f;视频后面又说段寄存器是16位&#xff0c;高13位是在GDT中的index&#xff0c;低2位是优先级&#xff1f;但是刚启动的时候全部16位都是用来表示地址的吧&#xff1f;</p>\n<p>这块没有讲清楚。</p>\n<p>望赐教。多谢</p>", "anon": "no", "created": "2017-02-27T02:23:30Z", "uid": "hdjonbiyfs62ie", "subject": "系统刚启动后CS寄存器的初值"}, {"content": "<p>第3讲关于启动顺序的视频里说&#xff0c;系统加电启动后CS寄存器设为F000&#xff0c;EIP设为FFF0。然后CS左移4位加上EIP得到FFFF0是第一条指令的地址。</p>\n<p>第4讲第一节又说系统启动后CS是F000&#xff0c;CS的base是FFFF0000&#xff0c;EIP是0000FFF0&#xff0c;CS的base加上EIP得到FFFFFFF0.之后又说CS:IP的意思就是CS一个16位的地址左移4位得到20位的地址加上IP这个offset</p>\n<p>这个CS的base是什么意思&#xff1f;之前好像从来没讲过&#xff1f;CS这种段寄存器到底是什么样的结构&#xff1f;视频后面又说段寄存器是16位&#xff0c;高13位是在GDT中的index&#xff0c;低2位是优先级&#xff1f;但是刚启动的时候全部16位都是用来表示地址的吧&#xff1f;</p>\n<p>这块没有讲清楚。</p>\n<p>望赐教。多谢</p>", "anon": "full", "created": "2016-03-02T03:25:14Z", "subject": "系统刚启动后CS寄存器的初值"}]}, "error": null}