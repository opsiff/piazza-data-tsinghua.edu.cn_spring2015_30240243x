{"aid": "igkq7sh4b4b3up", "error": null, "result": {"default_anonymity": "no", "status": "active", "i_edits": [], "q_edits": [], "bookmarked": 3, "request_instructor": 0, "history": [{"uid": "iezimbvr4Kl", "anon": "no", "created": "2015-09-25T17:04:14Z", "content": "<p></p>\n<div>在UCORE操作系统实验lab2中的pmm.c文件中有个方法&#xff0c;如下所示&#xff1a;</div>\n<div>\n<div><tt>void print_pgdir(void) {</tt></div>\n<div><tt>    cprintf(&#34;-------------------- BEGIN --------------------\\n&#34;);</tt></div>\n<div><tt>    size_t left, right = 0, perm;</tt></div>\n<div><tt>    while ((perm = get_pgtable_items(0, NPDEENTRY, right, vpd, &amp;left, &amp;right)) != 0) {</tt></div>\n<div><tt>        cprintf(&#34;PDE(%03x) %08x-%08x %08x %s\\n&#34;, right - left,</tt></div>\n<div><tt>                left * PTSIZE, right * PTSIZE, (right - left) * PTSIZE, perm2str(perm));</tt></div>\n<div><tt>        size_t l, r = left * NPTEENTRY;</tt></div>\n<div><tt>        while ((perm = get_pgtable_items(left * NPTEENTRY, right * NPTEENTRY, r, vpt, &amp;l, &amp;r)) != 0) {</tt></div>\n<div><tt>            cprintf(&#34;  |-- PTE(%05x) %08x-%08x %08x %s\\n&#34;, r - l,</tt></div>\n<div><tt>                    l * PGSIZE, r * PGSIZE, (r - l) * PGSIZE, perm2str(perm));</tt></div>\n<div><tt>        }</tt></div>\n<div><tt>    }</tt></div>\n<div><tt>    cprintf(&#34;--------------------- END ---------------------\\n&#34;);</tt></div>\n<div><tt>}</tt></div>\n</div>\n<div></div>\n<div>经过分析print_pgdir方法&#xff0c;我知道当第一次运行get_pgtable_items方法后&#xff0c;left=768&#xff0c;right=992&#xff1b;当第二次运行get_pgtable_items方法时&#xff0c;指针vpt&#xff08;0xFAC00000&#xff09;经过段页机制转换得到的物理地址是多少呢&#xff1f;r = left * NPTEENTRY= 768 *1024&#xff0c;那么这里的768*1024指的是什么呢&#xff1f;我思考好几天一直没有结果&#xff0c;也可能是我对自映射的机制理解有问题&#xff0c;还请老师指点。</div>\n<div></div>\n<div></div>\n<div></div>", "subject": "自映射机制的疑问"}, {"uid": "iezimbvr4Kl", "anon": "no", "created": "2015-09-25T11:05:55Z", "content": "<p></p>\n<div>在UCORE操作系统实验lab2中的pmm.c文件中有个方法&#xff0c;如下所示。</div>\n<div>经过分析print_pgdir方法&#xff0c;我知道当第一次运行get_pgtable_items方法后&#xff0c;left=768&#xff0c;right=992&#xff1b;当第二次运行get_pgtable_items方法时&#xff0c;指针vpt&#xff08;0xFAC00000&#xff09;经过段页机制转换得到的物理地址是0吗&#xff1f;同时r = left * NPTEENTRY= 768 *1024&#xff0c;那么这里的768*1024指的是什么呢&#xff1f;我思考好几天一直没有结果&#xff0c;也可能是我对自映射的机制理解有问题&#xff0c;还请老师指点。</div>\n<div></div>\n<div></div>\n<div>\n<div>void print_pgdir(void) {</div>\n<div>    cprintf(&#34;-------------------- BEGIN --------------------\\n&#34;);</div>\n<div>    size_t left, right = 0, perm;</div>\n<div>    while ((perm = get_pgtable_items(0, NPDEENTRY, right, vpd, &amp;left, &amp;right)) != 0) {</div>\n<div>        cprintf(&#34;PDE(%03x) %08x-%08x %08x %s\\n&#34;, right - left,</div>\n<div>                left * PTSIZE, right * PTSIZE, (right - left) * PTSIZE, perm2str(perm));</div>\n<div>        size_t l, r = left * NPTEENTRY;</div>\n<div>        while ((perm = get_pgtable_items(left * NPTEENTRY, right * NPTEENTRY, r, vpt, &amp;l, &amp;r)) != 0) {</div>\n<div>            cprintf(&#34;  |-- PTE(%05x) %08x-%08x %08x %s\\n&#34;, r - l,</div>\n<div>                    l * PGSIZE, r * PGSIZE, (r - l) * PGSIZE, perm2str(perm));</div>\n<div>        }</div>\n<div>    }</div>\n<div>    cprintf(&#34;--------------------- END ---------------------\\n&#34;);</div>\n<div>}</div>\n</div>", "subject": "自映射机制的疑问"}, {"uid": "iezimbvr4Kl", "anon": "no", "created": "2015-09-25T10:43:11Z", "content": "<p></p><div>在UCORE操作系统实验lab2中的pmm.c文件中有个方法&#xff0c;如下所示。</div>\n<div>经过分析print_pgdir方法&#xff0c;我知道当第一次运行get_pgtable_items方法后&#xff0c;left=768&#xff0c;right=992&#xff1b;当第二次运行get_pgtable_items方法时&#xff0c;指针vpt&#xff08;0xFAC00000&#xff09;经过段页机制转换得到的物理地址为CR3寄存器中存储的物理地址&#xff0c;同时r = left * NPTEENTRY= 768 *1024&#xff0c;那么这里的768*1024指的是什么呢&#xff1f;我思考好几天一直没有结果&#xff0c;也可能是我对自映射的机制理解有问题&#xff0c;还请老师指点。</div>\n<div></div>\n<div></div>\n<div>\n<div>void print_pgdir(void) {</div>\n<div>    cprintf(&#34;-------------------- BEGIN --------------------\\n&#34;);</div>\n<div>    size_t left, right = 0, perm;</div>\n<div>    while ((perm = get_pgtable_items(0, NPDEENTRY, right, vpd, &amp;left, &amp;right)) != 0) {</div>\n<div>        cprintf(&#34;PDE(%03x) %08x-%08x %08x %s\\n&#34;, right - left,</div>\n<div>                left * PTSIZE, right * PTSIZE, (right - left) * PTSIZE, perm2str(perm));</div>\n<div>        size_t l, r = left * NPTEENTRY;</div>\n<div>        while ((perm = get_pgtable_items(left * NPTEENTRY, right * NPTEENTRY, r, vpt, &amp;l, &amp;r)) != 0) {</div>\n<div>            cprintf(&#34;  |-- PTE(%05x) %08x-%08x %08x %s\\n&#34;, r - l,</div>\n<div>                    l * PGSIZE, r * PGSIZE, (r - l) * PGSIZE, perm2str(perm));</div>\n<div>        }</div>\n<div>    }</div>\n<div>    cprintf(&#34;--------------------- END ---------------------\\n&#34;);</div>\n<div>}</div>\n</div>", "subject": "自映射机制的疑问"}], "s_edits": [], "is_bookmarked": false, "tag_good_arr": [], "request_instructor_me": false, "my_favorite": false, "t": 1446636828136, "children": [{"is_tag_endorse": false, "created": "2015-09-28T00:31:57Z", "id": "if37a4uvcij47", "tag_endorse": [{"name": "szqxzh", "id": "iezimbvr4Kl", "role": "student", "facebook_id": null, "photo": null, "admin": false, "us": false}], "folders": [], "history": [{"uid": "hdjoucuyb836fq", "anon": "no", "created": "2015-09-28T00:31:57Z", "content": "<p>如何用二级页表将线性地址转换成物理地址是一个明确的算法。请尝试把ucore所使用的页表的总体结构完整画出来&#xff0c;然后严格按照二级页表将线性地址转换到物理地址的算法过程&#xff0c;推演vpt这个虚拟地址&#xff08;也是线性地址&#xff09;的转换过程。</p>", "subject": ""}], "config": {}, "data": {"embed_links": []}, "bucket_order": 2, "bucket_name": "Today", "tag_endorse_arr": ["iezimbvr4Kl"], "children": [], "type": "i_answer"}, {"uid": "iezimbvr4Kl", "no_answer": 0, "created": "2015-09-28T10:57:31Z", "id": "if3tmm3clj05ee", "updated": "2015-09-28T10:57:31Z", "subject": "<p></p>", "anon": "no", "folders": [], "config": {}, "data": {"embed_links": null}, "bucket_order": 5, "bucket_name": "Last week", "no_upvotes": 0, "children": [], "type": "followup"}], "type": "question", "unique_views": 32, "created": "2015-09-25T10:43:11Z", "id": "iezismvgghh4g3", "no_answer": 0, "nr": 506, "data": {"embed_links": []}, "upvote_ids": [], "is_tag_good": false, "config": {}, "folders": ["lab2"], "bucket_order": 2, "change_log": [{"uid": "iezimbvr4Kl", "when": "2015-09-25T10:43:11Z", "data": "iezismvkyx4g4", "anon": "no", "type": "create"}, {"uid": "iezimbvr4Kl", "when": "2015-09-25T11:05:55Z", "data": "iezjluxvd4d2je", "anon": "no", "type": "update"}, {"uid": "iezimbvr4Kl", "when": "2015-09-25T17:04:14Z", "data": "iezwenkqlsw7n9", "anon": "no", "type": "update"}, {"uid": "hdjoucuyb836fq", "when": "2015-09-28T00:31:57Z", "data": "if37a4v0vxa49", "to": "iezismvgghh4g3", "anon": "no", "type": "i_answer"}, {"uid": "iezimbvr4Kl", "when": "2015-09-28T10:57:31Z", "to": "iezismvgghh4g3", "anon": "no", "type": "followup"}], "bucket_name": "Today", "tags": ["lab2", "student"], "no_answer_followup": 0, "num_favorites": 0, "tag_good": []}}