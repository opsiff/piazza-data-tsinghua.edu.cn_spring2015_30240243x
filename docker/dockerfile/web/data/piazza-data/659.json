{"aid": "izsjslrmrpc5dj", "result": {"status": "active", "unique_views": 156, "request_instructor_me": false, "change_log": [{"data": "ilhb2dwc2a1387", "anon": "no", "when": "2016-03-07T01:24:54Z", "uid": "hdjonbiyfs62ie", "type": "create"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T01:26:20Z", "uid": "hdjonbiyfs62ie", "type": "followup"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T01:26:50Z", "uid": "hdjonbiyfs62ie", "type": "followup"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T01:27:15Z", "uid": "hdjonbiyfs62ie", "type": "followup"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T01:27:35Z", "uid": "hdjonbiyfs62ie", "type": "followup"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T02:21:09Z", "uid": "ie7xy71bn7b1s2", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T02:33:35Z", "uid": "i0d4mr9tga62ki", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T03:02:24Z", "uid": "i0nan8i4g0o3s3", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T03:03:30Z", "uid": "i0c9nvk0xzc2n3", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T03:11:45Z", "uid": "i11v1az5sf83l2", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T04:11:28Z", "uid": "i6ub4vwhQXd", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T05:40:00Z", "uid": "i0nuu5yhgno5tv", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T06:19:57Z", "uid": "i0c1nsm3911wc", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T06:52:20Z", "uid": "ierwkwbinsj2t8", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T07:01:14Z", "uid": "i0ayxqk6wry734", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T07:03:26Z", "uid": "i242q8ug7vw40x", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T07:05:41Z", "uid": "i11dx198ive25r", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T07:12:44Z", "uid": "i242q8ug7vw40x", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T08:06:44Z", "uid": "i0nu5by9l7v7of", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T08:34:44Z", "uid": "i3qk2vs65x276j", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T08:51:05Z", "uid": "i0yuo4o74sx70w", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:08:35Z", "uid": "i0b7d04pl3y6c0", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:10:49Z", "uid": "i18riqkwrl225m", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:16:59Z", "uid": "ibz6vywnw6g7nl", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:17:17Z", "uid": "ibz6vywnw6g7nl", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:18:48Z", "uid": "ibz6vywnw6g7nl", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:21:26Z", "uid": "i0dlq4m0wjn5eo", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:21:32Z", "uid": "ibz6vywnw6g7nl", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T09:45:25Z", "uid": "ikvcvnzpzq7j7", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T10:55:25Z", "uid": "i0brpl1lbyui6", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T10:55:32Z", "uid": "i0brpl1lbyui6", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T10:59:25Z", "uid": "i6ugy67km5b", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:01:31Z", "uid": "i0i7rzz9iau2gd", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:06:43Z", "uid": "iem550jbpyn515", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:07:13Z", "uid": "i0eqqq6jvng408", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:11:56Z", "uid": "ikvcvr6di5i7ma", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:19:00Z", "uid": "i0ccqbaxwdz75c", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:27:13Z", "uid": "ikvcvmzbvlf7i6", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:36:02Z", "uid": "i0ccfx63sir1e", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:52:08Z", "uid": "ikx8y1dzPrM", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:55:14Z", "uid": "i2olyyl8swl1we", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:57:22Z", "uid": "i70lz5f0QKm", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:58:07Z", "uid": "i6ub5at2geM", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:58:55Z", "uid": "ibz6web8v91dk", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T11:58:58Z", "uid": "i28t9sj8bas79c", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T12:00:00Z", "uid": "ic226rac4j5jw", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T12:00:17Z", "uid": "i6w84pnmjCQ", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T12:05:06Z", "uid": "i6vjwdpfniF", "type": "feedback"}, {"to": "ilhb2dw96l386", "anon": "no", "when": "2016-03-07T14:22:39Z", "uid": "i1bzj2xilgm4uk", "type": "feedback"}, {"data": "ilojwir8d5ttw", "anon": "no", "when": "2016-03-12T03:06:41Z", "uid": "hdjonbiyfs62ie", "type": "update"}, {"type": "update", "anon": "no", "when": "2017-03-02T07:46:40Z", "data": "izs3801xgc4oj", "uid": "hdjonbiyfs62ie"}], "upvote_ids": [], "id": "ilhb2dw96l386", "bookmarked": 42, "tags": ["2016", "instructor-note", "lecture5", "课堂问答"], "i_edits": [], "is_bookmarked": false, "children": [{"folders": [], "updated": "2016-03-07T01:26:20Z", "no_upvotes": 0, "uid": "hdjonbiyfs62ie", "created": "2016-03-07T01:26:20Z", "type": "followup", "no_answer": 0, "id": "ilhb47qe3p94p3", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [{"folders": [], "updated": "2016-03-07T03:02:24Z", "uid": "i0nan8i4g0o3s3", "created": "2016-03-07T03:02:24Z", "type": "feedback", "id": "ilhejrm451p6gn", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011720 % 4 == 0</p>\n<p><a href=\"https://gist.github.com/tansinan/d58ddd0135ba088c4ea7\">https://gist.github.com/tansinan/d58ddd0135ba088c4ea7</a></p>\n<p>没考虑优化&#xff0c;只是模拟操作&#xff0c;并没有真的使用brk系统调用管理内存。</p>\n<p></p>\n<p>向勇的注&#xff1a;我无法访问到你的链接。请把你的结果放在本贴中或换个容易访问的地方。</p>"}, {"folders": [], "updated": "2016-03-07T07:05:41Z", "uid": "i11dx198ive25r", "created": "2016-03-07T07:05:41Z", "type": "feedback", "id": "ilhn8muntrg1ht", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>叶方轲 2013011340</p>\n<p>张殿炎 2013011328</p>\n<p><a href=\"https://github.com/fkye/os-spoc-answer/blob/master/03-1.c\">https://github.com/fkye/os-spoc-answer/blob/master/03-1.c</a><a href=\"https://github.com/fkye/os-spoc-answer/blob/master/03-1.c\" target=\"_blank\"></a></p>\n<p>设计思路见注释</p>\n<p>测试用例见main函数</p>"}, {"folders": [], "updated": "2016-03-07T07:12:44Z", "uid": "i242q8ug7vw40x", "created": "2016-03-07T07:12:44Z", "type": "feedback", "id": "ilhnhovcorei6", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/donghy/os_exercise/blob/master/lecture5_ex_best.c\" target=\"_blank\">best-fit</a></p>\n<p>并没有优化.....</p>\n<p>学号: 2013011356</p>"}, {"folders": [], "updated": "2016-03-07T09:16:59Z", "uid": "ibz6vywnw6g7nl", "created": "2016-03-07T09:16:59Z", "type": "feedback", "id": "ilhrxhjx8zb6y", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>王呈瑞 2012011285</p>\n<p><a href=\"https://github.com/morenan/ex1\">https://github.com/morenan/ex1</a></p>\n<p>4种都实现了&#xff0c;最优匹配没有用优先队列优化</p>"}, {"folders": [], "updated": "2016-03-07T09:45:25Z", "uid": "ikvcvnzpzq7j7", "created": "2016-03-07T09:45:25Z", "type": "feedback", "id": "ilhsy1q035b3w2", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>甄显安 2012080060</p>\n<p>陆喆 2012011308</p>\n<p><a href=\"https://github.com/lbx6z/os_course_spoc_exercises/blob/master/best_fit.cpp\" target=\"_blank\">https://github.com/lbx6z/os_course_spoc_exercises/blob/master/best_fit.cpp</a></p>"}, {"folders": [], "updated": "2016-03-07T10:55:32Z", "uid": "i0brpl1lbyui6", "created": "2016-03-07T10:55:32Z", "type": "feedback", "id": "ilhvg8079x01ge", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>杨明 谢琛睿</p>"}, {"folders": [], "updated": "2016-03-07T11:07:13Z", "uid": "i0eqqq6jvng408", "created": "2016-03-07T11:07:13Z", "type": "feedback", "id": "ilhvv8vzixt5g4", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011376 龚拓宇</p>\n<p>2013011379 姚炫容</p>\n<p><a href=\"https://github.com/suanrong/os_course_spoc_exercises/blob/master/a.c\" target=\"_blank\">https://github.com/suanrong/os_course_spoc_exercises/blob/master/a.c</a></p>"}, {"folders": [], "updated": "2016-03-07T11:58:07Z", "uid": "i6ub5at2geM", "created": "2016-03-07T11:58:07Z", "type": "feedback", "id": "ilhxopj5d01k4", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>2012080059 金嘉宇</p>\n<p>2012011321 章晔</p>\n<p>非常基础的实现first fit, best fit 和worst fit的实现&#xff0c;不考虑对其&#xff0c;也不对释放的内存作检查。<br />每小块使用一个含2个数字的pair表示&#xff0c;分别表示起始地址和大小&#xff1b;可使用内存使用一个这样的列表表示&#xff1b;<br />每个函数有基础的说明.</p>\n<p><a href=\"https://github.com/rafaeljin/memory_management_homework\">https://github.com/rafaeljin/memory_management_homework</a> 里面有样例结果和代码。</p>"}, {"folders": [], "updated": "2016-03-07T11:58:55Z", "uid": "ibz6web8v91dk", "created": "2016-03-07T11:58:55Z", "type": "feedback", "id": "ilhxpqjyboc1io", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>陆喆 2012011308</p>\n<p>甄显安 2012080060</p>\n<p><a target=\"_blank\" href=\"https://github.com/axjem/os_exercises/blob/patch-1/best_fit.cpp\">https://github.com/axjem/os_exercises/blob/patch-1/best_fit.cpp</a></p>\n<p>&#xff08;修改过&#xff09;</p>\n<p></p>"}], "subject": "<p>题目&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题\">https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题</a></p>\n<p></p>\n<p>选择实现“0:最优匹配”的同学的回答结果写在此贴中对应题目后面。</p>"}, {"folders": [], "updated": "2016-03-07T01:26:50Z", "no_upvotes": 0, "uid": "hdjonbiyfs62ie", "created": "2016-03-07T01:26:50Z", "type": "followup", "no_answer": 0, "id": "ilhb4v3qck44zo", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [{"folders": [], "updated": "2016-03-07T03:03:30Z", "uid": "i0c9nvk0xzc2n3", "created": "2016-03-07T03:03:30Z", "type": "feedback", "id": "ilhel6o1s1h79x", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011379 姚炫容</p>\n<p><a href=\"https://github.com/suanrong/os_course_spoc_exercises/blob/master/all/test.c\" target=\"_blank\">code</a></p>\n<p>实现的有点暴力</p>"}, {"folders": [], "updated": "2016-03-07T07:03:26Z", "uid": "i242q8ug7vw40x", "created": "2016-03-07T07:03:26Z", "type": "feedback", "id": "ilhn5qjmsej2m0", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/donghy/os_exercise/blob/master/lecture5_ex.c\" target=\"_blank\">code</a><br />并没有任何优化....... 以及我学号算错.... 不过和最优匹配区别不大</p>\n<p>学号: 2013011356</p>"}, {"folders": [], "updated": "2016-03-07T08:06:44Z", "uid": "i0nu5by9l7v7of", "created": "2016-03-07T08:06:44Z", "type": "feedback", "id": "ilhpf5ccpoq3r1", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p><a href=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i0nu5by9l7v7of/ilhpe9myty1v/cheat.cpp\" target=\"_blank\">code</a></p>\n<p></p>\n<p>main函数中是一个小例子。</p>\n<p></p>\n<p>2013011409 王启圣</p>\n<p>2013011395 马志明</p>"}, {"folders": [], "updated": "2016-03-07T08:51:05Z", "uid": "i0yuo4o74sx70w", "created": "2016-03-07T08:51:05Z", "type": "feedback", "id": "ilhr0642e0v68t", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011416 张浩天  2013011389 郑兆衡</p>\n<p>我们实现了2种方法 “最差匹配”和“Buddy System” </p>\n<p></p>\n<p>“最差匹配”  </p>\n<p>源代码</p>\n<p><a href=\"https://github.com/ZhengZhaoHeng/os_2016/blob/master/lec5_spoc/worstMatch/worstMatch.cpp\" target=\"_blank\">worstMatch.cpp</a></p>\n<p>说明文档</p>\n<p><a href=\"https://github.com/ZhengZhaoHeng/os_2016/blob/master/lec5_spoc/worstMatch/ReadMe.md\" target=\"_blank\">ReadMe.md</a></p>\n<p></p>\n<p>Buddy System</p>\n<p>源代码</p>\n<p><a href=\"https://github.com/ZhengZhaoHeng/os_2016/blob/master/lec5_spoc/buddy/buddy.cpp\" target=\"_blank\">buddy.cpp</a></p>\n<p>说明文档</p>\n<p><a href=\"https://github.com/ZhengZhaoHeng/os_2016/blob/master/lec5_spoc/buddy/ReadMe.md\" target=\"_blank\">ReadMe.md</a></p>"}, {"folders": [], "updated": "2016-03-07T09:10:49Z", "uid": "i18riqkwrl225m", "created": "2016-03-07T09:10:49Z", "type": "feedback", "id": "ilhrpk3q2a92bi", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i18riqkwrl225m/ilhrp232txpn/mm.cpp\" target=\"_blank\">mm.cpp</a></p>\n<p>杨青霖 2013011297</p>\n<p>李奕欣 2013011302</p>"}, {"folders": [], "updated": "2016-03-07T09:17:17Z", "uid": "ibz6vywnw6g7nl", "created": "2016-03-07T09:17:17Z", "type": "feedback", "id": "ilhrxv997oj9v", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/morenan/ex1\" target=\"_blank\">https://github.com/morenan/ex1</a></p>\n<p>4种都实现了&#xff0c;最差匹配没有用优先队列优化</p>"}, {"folders": [], "updated": "2016-03-07T10:55:25Z", "uid": "i0brpl1lbyui6", "created": "2016-03-07T10:55:25Z", "type": "feedback", "id": "ilhvg2rwhld1ex", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/ZOROYANG/Worst-Matching_Best-Matching\">https://github.com/ZOROYANG/Worst-Matching_Best-Matching</a></p>\n<p>杨明 谢琛睿</p>"}, {"folders": [], "updated": "2016-03-07T11:01:31Z", "uid": "i0i7rzz9iau2gd", "created": "2016-03-07T11:01:31Z", "type": "feedback", "id": "ilhvnx3wra73qx", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013010617  王凯</p>\n<p>2012012231 黄科</p>\n<p>https://github.com/kaiwang13/OS/blob/master/class/week3-1/main.cpp</p>"}, {"folders": [], "updated": "2016-03-07T11:36:02Z", "uid": "i0ccfx63sir1e", "created": "2016-03-07T11:36:02Z", "type": "feedback", "id": "ilhwwb3cc8s70d", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>杨晓成 2013011383 刘晓鸿 2013010949</p>\n<p></p>\n<p>用c&#43;&#43;实现三种分配策略&#xff0c;并且设计实验分析相关性能。</p>\n<p></p>\n<p>代码链接&#xff1a;</p>\n<p><a href=\"https://github.com/lxhlxhlxh555/ucore_ex/tree/master/lect05\">https://github.com/lxhlxhlxh555/ucore_ex/tree/master/lect05</a></p>\n<p></p>\n<p>由于时间有限&#xff0c;仅做了不同分配策略下的碎片数的分析实验。</p>\n<p>实验报告如下&#xff1a;</p>\n<pre>实验结果\n    无碎片整理\n        mem size: 1000\n        block range:[10,100]\n        first:fragCount:1949, count:115\n        best:fragCount:550, count:69\n        worst:fragCount:831, count:73\n\n    有碎片整理\n        mem size: 1000\n        block range:[10,100]\n        first:fragCount:136, count:57\n        best:fragCount:131, count:56\n        worst:fragCount:140, count:57\n\n    参数说明\n        mem size 内存大小\n        block range 申请内存块大小范围\n        count 遇到内存不足的次数\n        fragCount 遇到内存不足时碎片的个数总和\n\n实验结论\n    在无碎片整理的情况下\n        最先分配遇到内存不足的情况多&#xff0c;产生碎片多。\n        表现最好是最佳分配&#xff0c;其次是最差分配。\n    在有碎片整理的情况下\n        表现差不多\n\n实验框架说明\n    类\n        MemoryManager 内存管理器\n            抽象类&#xff0c;声明alloc,free等虚函数\n        FirstFit 最先分配\n            实现MemoryManager\n        SizeFit&lt;Compare::BestFit&gt; 最佳分配\n            实现MemoryManager\n        SizeFit&lt;Compare::WorstFit&gt; 最差分配\n            实现MemoryManager\n        MemBlock 内存块\n        Sequence 序列产生\n            产生有一定的随机数&#xff0c;用于申请内存\n    实验主体\n        1、每种内存管理策略的内存大小相等。\n        2、对每种内存管理策略&#xff0c;重复以下过程&#xff1a;\n            1、随机申请内存&#xff0c;大小为range[min,max]\n            2、如果内存不足&#xff0c;则随机释放一个内存块&#xff0c;[碎片整理]&#xff0c;同时统计数据\n            3、有50%的概率随机释放内存块\n        3、输出统计数据\n</pre>\n<p></p>"}, {"folders": [], "updated": "2016-03-07T11:55:14Z", "uid": "i2olyyl8swl1we", "created": "2016-03-07T11:55:14Z", "type": "feedback", "id": "ilhxkzkuykf1ly", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>黎文杰 2013011353</p>\n<p>曹科垒 2013011345</p>\n<p>详见注释</p>\n<p>不论是算法&#xff08;暴力枚举、数组模拟链表&#xff09;还是提交方式都有点low</p>\n<p><a href=\"http://pan.baidu.com/s/1qXuBGbq\">http://pan.baidu.com/s/1qXuBGbq</a></p>"}], "subject": "<p>题目&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题\">https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题</a></p>\n<p></p>\n<p>选择实现“1:最差匹配”的同学的回答结果写在此贴中对应题目后面。</p>"}, {"folders": [], "updated": "2016-03-07T01:27:15Z", "no_upvotes": 0, "uid": "hdjonbiyfs62ie", "created": "2016-03-07T01:27:15Z", "type": "followup", "no_answer": 0, "id": "ilhb5ebnd785a0", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [{"folders": [], "updated": "2016-03-07T02:21:09Z", "uid": "ie7xy71bn7b1s2", "created": "2016-03-07T02:21:09Z", "type": "feedback", "id": "ilhd2py1fmp6xq", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://gist.github.com/gjc13/117d18d87f8a6a5151ac\">https://gist.github.com/gjc13/117d18d87f8a6a5151ac</a></p>\n<p>2013011509 郭嘉丞</p>"}, {"folders": [], "updated": "2016-03-07T03:11:45Z", "uid": "i11v1az5sf83l2", "created": "2016-03-07T03:11:45Z", "type": "feedback", "id": "ilhevs8012m5ig", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>2013011310 余翔</p>\n<p>2013011308 林婕茵</p>\n<p>提供了比较完整的说明和注释&#xff0c;具体可参考代码。</p>\n<p>同时定义了输入和输出规范&#xff0c;并提供测试文件。</p>\n<p><a href=\"https://github.com/yxfish13/first-fit/blob/master/main.cpp\" target=\"_blank\">代码</a></p>\n<p><a href=\"https://github.com/yxfish13/first-fit/blob/master/input.txt\" target=\"_blank\">测试输入文件</a></p>\n<p><a href=\"https://github.com/yxfish13/first-fit/blob/master/output.txt\" target=\"_blank\">测试输出文件</a></p>\n<p>简要说明一下&#xff0c;具体还是希望参见<strong>代码注释</strong></p>\n<p>这里采用了最优匹配的方式&#xff0c;用listNode表示一段空间(start,end)&#xff0c;用链表维护这些空闲的内存段。</p>\n<p>申请时候每次遍历列表&#xff0c;找到最先可用的区间便使用。</p>\n<p>释放时简单实现了相邻的空闲空间合并。</p>\n<p></p>\n<p>输入输出方式为M x表示申请x大小空间&#xff0c;F p,x表示从p开始释放x的空间&#xff0c;代码中也提供了详细说明 。程序每次操作完会进行一次目前空闲内存段的输出。</p>\n<p>如提供的样例</p>\n<p>输入</p>\n<p>7<br />M 10<br />M 20<br />M 30<br />F 0 10<br />F 30 30<br />M 20<br />M 10</p>\n<p>输出&#xff1a;</p>\n<p>....</p>\n<p>step 4<br />[0,10)<br />[30,100)</p>\n<p>....</p>\n<p>step 6</p>\n<p>[50,100)</p>\n<p></p>\n<p></p>\n<p>step从0开始计数</p>\n<p>step4的F 30,30&#xff0c;申请出来的空间和末尾的40个空间进行合并成[30,100),</p>\n<p>step6的M 10&#xff0c;就会申请最开始的[0,10)的空闲空间。只剩下[50,100)</p>\n<p></p>\n<p>整理注释和说明貌似花了比较久...希望看起来不会乱</p>"}, {"folders": [], "updated": "2016-03-07T05:40:00Z", "uid": "i0nuu5yhgno5tv", "created": "2016-03-07T05:40:00Z", "type": "feedback", "id": "ilhk6fnb9a85bn", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011402 钱迪晨 2013011413 高思达</p>\n<p><a href=\"https://github.com/nathenqian/ucore_spoc/blob/master/spoc_5/main.cpp\" target=\"_blank\">github代码和注释</a></p>"}, {"folders": [], "updated": "2016-03-07T06:19:57Z", "uid": "i0c1nsm3911wc", "created": "2016-03-07T06:19:57Z", "type": "feedback", "id": "ilhlltcbyrf4lt", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>朱俸民 2012011894 &amp; 朱新瑞 2013011411</p>\n<p>仓库位于&#xff1a;<a href=\"https://github.com/paulzfm/os_course_spoc_exercises/tree/master/FirstFit\">https://github.com/paulzfm/os_course_spoc_exercises/tree/master/FirstFit</a><a href=\"https://github.com/paulzfm/os_course_spoc_exercises/tree/master/FirstFit\" target=\"_blank\"></a></p>\n<p>实验结果参见&#xff1a;<a href=\"https://github.com/paulzfm/os_course_spoc_exercises/blob/master/FirstFit/README.md#运行结果\">https://github.com/paulzfm/os_course_spoc_exercises/blob/master/FirstFit/README.md#运行结果</a>。</p>"}, {"folders": [], "updated": "2016-03-07T06:52:20Z", "uid": "ierwkwbinsj2t8", "created": "2016-03-07T06:52:20Z", "type": "feedback", "id": "ilhmrgeprgru1", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2014011434 == 2 (mod 4)</p>\n<p>[GitLab仓库]( <a href=\"http://osgit.net9.org/weiyl14/lec5-exercise-first_fit\">http://osgit.net9.org/weiyl14/lec5-exercise-first_fit</a> )</p>\n<p>实现较为基础&#xff0c;没有考虑利用空闲空间储存数据&#xff0c;没有考虑对齐。</p>"}, {"folders": [], "updated": "2016-03-07T08:34:44Z", "uid": "i3qk2vs65x276j", "created": "2016-03-07T08:34:44Z", "type": "feedback", "id": "ilhqf5l4qzz4si", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>2013011296 贺子松 2013011320 陆禹</p>\n<p><a href=\"https://github.com/Hezisong/os_practice/blob/master/ff.cpp\">https://github.com/Hezisong/os_practice/blob/master/ff.cpp</a></p>\n<p>基础实现</p>"}, {"folders": [], "updated": "2016-03-07T09:18:48Z", "uid": "ibz6vywnw6g7nl", "created": "2016-03-07T09:18:48Z", "type": "feedback", "id": "ilhrztpz1xkzf", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/morenan/ex1\" target=\"_blank\">https://github.com/morenan/ex1</a></p>\n<p>4种都实现了&#xff0c;第1种为最先匹配&#xff0c;用双向链表维护。</p>\n<p>最差匹配和最优匹配用的也是同样的数据结构。</p>"}, {"folders": [], "updated": "2016-03-07T10:59:25Z", "uid": "i6ugy67km5b", "created": "2016-03-07T10:59:25Z", "type": "feedback", "id": "ilhvl7paq9k2v4", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>崔岩 2012011309&#xff0c;陈伯乐 2012011302</p>\n<p><a href=\"https://github.com/Thucuiyan/OS_Spoc/tree/master/w3l1_spoc\" target=\"_blank\">https://github.com/Thucuiyan/OS_Spoc/tree/master/w3l1_spoc</a></p>"}, {"folders": [], "updated": "2016-03-07T11:11:56Z", "uid": "ikvcvr6di5i7ma", "created": "2016-03-07T11:11:56Z", "type": "feedback", "id": "ilhw1ayb96e2nr", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2013011406 谢琛睿 2013011412 杨明</p>\n<p>https://git.oschina.net/akitsuki/OS-course/tree/master/%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86demo?dir=1&amp;filepath=%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86demo&amp;oid=36170acf531d3581dd20cb00cf3ca25426b15e3f&amp;sha=508f28339c34707002a4867fb28dec66af4099b2</p>\n<p>实现了全部四种算法。</p>"}, {"folders": [], "updated": "2016-03-07T11:19:00Z", "uid": "i0ccqbaxwdz75c", "created": "2016-03-07T11:19:00Z", "type": "feedback", "id": "ilhwae1hu3a1ks", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>何乐 2013011351 郭栋2013011334</p>\n<p><a href=\"https://github.com/HollaTsinghua/OS-lecture-5.git\">https://github.com/HollaTsinghua/OS-lecture-5.git</a></p>"}, {"folders": [], "updated": "2016-03-07T11:27:13Z", "uid": "ikvcvmzbvlf7i6", "created": "2016-03-07T11:27:13Z", "type": "feedback", "id": "ilhwkys13r1lt", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/ikvcvmzbvlf7i6/ilhwke0940is/test.c\" target=\"_blank\">代码及注释</a></p>"}], "subject": "<p>题目&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题\">https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题</a></p>\n<p></p>\n<p>选择实现“2:最先匹配”的同学的回答结果写在此贴中对应题目后面。</p>"}, {"folders": [], "updated": "2016-03-07T01:27:35Z", "no_upvotes": 0, "uid": "hdjonbiyfs62ie", "created": "2016-03-07T01:27:35Z", "type": "followup", "no_answer": 0, "id": "ilhb5torrwd5ln", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [{"folders": [], "updated": "2016-03-07T02:33:35Z", "uid": "i0d4mr9tga62ki", "created": "2016-03-07T02:33:35Z", "type": "feedback", "id": "ilhdiprhgow1l3", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>学号 : 2013011303  2013012213</p>\n<p><a href=\"https://github.com/honomaki/ucore_lab/blob/master/buddy_system/buddy_system.cpp\" target=\"_blank\">https://github.com/honomaki/ucore_lab/blob/master/buddy_system/buddy_system.cpp</a></p>"}, {"folders": [], "updated": "2016-03-07T04:11:28Z", "uid": "i6ub4vwhQXd", "created": "2016-03-07T04:11:28Z", "type": "feedback", "id": "ilhh0kotm5k2hs", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>徐捷 2012011371&#xff0c;赖国堃 2012011372</p>\n<p><a href=\"https://github.com/EternalAnswer/os_course_spoc_exercises/blob/master/all/03-1-spoc/buddy_alloc.cpp\" target=\"_blank\">buddy_system代码</a></p>\n<p><a href=\"https://github.com/EternalAnswer/os_course_spoc_exercises/blob/master/all/03-1-spoc/buddy_alloc_better.cpp\" target=\"_blank\">改进版buddy_system</a></p>\n<p>改进版本是加入了链表&#xff0c;维护不同大小的空闲区域&#xff0c;使得每次能够优先选择较小的空闲区域进行内存分配&#xff0c;前一个版本的代码是优先分配靠前的空闲内存块</p>"}, {"folders": [], "updated": "2016-03-07T07:01:14Z", "uid": "i0ayxqk6wry734", "created": "2016-03-07T07:01:14Z", "type": "feedback", "id": "ilhn2wd29xtju", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>沈哲言 2013011371  叶子鹏 2013011404</p>\n<p>代码&#xff1a;<a href=\"https://github.com/Silver-Shen/Buddy_System/blob/master/pmm_manager.cpp\" target=\"_blank\">buddy_system</a></p>\n<p>文档&#xff1a;<a href=\"https://github.com/Silver-Shen/Buddy_System/blob/master/README.md\" target=\"_blank\">文档</a></p>"}, {"folders": [], "updated": "2016-03-07T09:08:35Z", "uid": "i0b7d04pl3y6c0", "created": "2016-03-07T09:08:35Z", "type": "feedback", "id": "ilhrmojduoj508", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>杨晓成 2013011383 刘晓鸿 2013010949</p>\n<p><strong><a href=\"https://github.com/Yangxc13/v9-cpu/tree/master/03-1-spoc-discussion\">https://github.com/Yangxc13/v9-cpu/tree/master/03-1-spoc-discussion</a></strong></p>\n<p><strong></strong></p>"}, {"folders": [], "updated": "2016-03-07T09:21:26Z", "uid": "i0dlq4m0wjn5eo", "created": "2016-03-07T09:21:26Z", "type": "feedback", "id": "ilhs37mmg364qv", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>郑兆衡2013011389&#xff0c; 张浩天2013011416</p>\n<p>用线段树尝试实现了buddy system&#xff0c;代码和文档见如下链接</p>\n<p><a href=\"https://github.com/ZhengZhaoHeng/os_2016/tree/master/lec5_spoc/buddy\" target=\"_blank\">https://github.com/ZhengZhaoHeng/os_2016/tree/master/lec5_spoc/buddy</a></p>"}, {"folders": [], "updated": "2016-03-07T09:21:32Z", "uid": "ibz6vywnw6g7nl", "created": "2016-03-07T09:21:32Z", "type": "feedback", "id": "ilhs3byi86z554", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/morenan/ex1\" target=\"_blank\">https://github.com/morenan/ex1</a></p>\n<p>4种都实现了&#xff0c;伙伴系统用【二叉搜索树】来实现&#xff0c;</p>\n<p>树节点上的标记的每位表示每级是否有free block&#xff0c;</p>\n<p>malloc时自下而上维护标记&#xff0c;free时设置空闲标记&#xff0c;下一次访问时扩展。</p>"}, {"folders": [], "updated": "2016-03-07T11:06:43Z", "uid": "iem550jbpyn515", "created": "2016-03-07T11:06:43Z", "type": "feedback", "id": "ilhvul9wxot5hf", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>2012011271 宋佳铭</p>\n<p>2012011284 章彦恺</p>\n<p></p>\n<p><a href=\"https://github.com/grayluck/os_course_spoc_exercises/blob/master/all/buddy/a.cpp\" target=\"_blank\">Buddy_system的实现代码</a></p>\n<p></p>\n<p>实现的思想和方法是&#xff1a;</p>\n<p>使用一个二维的链表&#xff0c;将不同大小的可供分配的页块维护起来。每当一个页被释放的时候&#xff0c;在同样大小的页块中寻找是否存在可以进行合并的伙伴块进行合并</p>\n<p>程序可以从文件读取测试用例&#xff0c;并将分配结果输出到文件中以供测试。</p>"}, {"folders": [], "updated": "2016-03-07T11:52:08Z", "uid": "ikx8y1dzPrM", "created": "2016-03-07T11:52:08Z", "type": "feedback", "id": "ilhxh074l8j6nf", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>krajna 2014010527  git不太会用&#xff0c;正在push...</p>\n<p>仿真了一下buddy system,为了简便代码里使用了满的且是有序的二叉树&#xff0c;避免了链表&#xff0c;但是效率较低&#xff0c;ucore_lab中将用链表实现&#xff0c;这里仅为模拟。</p>\n<p></p>\n<p>http://172.16.13.236/krajna/ucore_lab/blob/master/spoc_answer/buddy_sys.cpp</p>"}, {"folders": [], "updated": "2016-03-07T11:57:22Z", "uid": "i70lz5f0QKm", "created": "2016-03-07T11:57:22Z", "type": "feedback", "id": "ilhxnqtrwg32cn", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p></p>\n<p>2012011307 黄必胜</p>\n<p><a href=\"https://github.com/hbisheng/Spoc_exercise/blob/master/buddy_system.c\" target=\"_blank\">buddy_system</a></p>\n<p>实现思路&#xff1a;</p>\n<p>利用二叉树。</p>\n<p>关键在于每个Page的成员属性&#xff1a;</p>\n<pre>struct Page\n{\n    int start; // where this page starts\n    int rem;   // the largest bytes of memory that remain in my filials  \n    int page_size; // a const number\n    Page* parent;\n    Page* left;\n    Page* right;\n}</pre>\n<p>通过一个rem变量来指示该node及其子孙中剩余空间最大的node。</p>\n<p>当需要分配内存空间时&#xff0c;从根节点开始&#xff0c;检查节点的rem值&#xff0c;如果大于所需的空间大小&#xff0c;则说明buddy node在该节点下&#xff1b;如果大于所需空间大小的两倍&#xff0c;则将父节点拆分成左右子节点&#xff0c;继续再子节点中查找合适的节点。</p>\n<p>当需要释放内存空间时&#xff0c;只需检查兄弟节点是否是空闲态&#xff0c;若是即合并&#xff0c;合并不断往根节点传播。</p>"}, {"folders": [], "updated": "2016-03-07T11:58:58Z", "uid": "i28t9sj8bas79c", "created": "2016-03-07T11:58:58Z", "type": "feedback", "id": "ilhxpswosue6du", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>徐圣韬 2012011287</p>\n<p></p>\n<p>https://github.com/mouryou/os_exercises/blob/master/all/buddy.cpp</p>"}, {"folders": [], "updated": "2016-03-07T12:00:00Z", "uid": "ic226rac4j5jw", "created": "2016-03-07T12:00:00Z", "type": "feedback", "id": "ilhxr45kehr3fz", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>高博</p>\n<p>2012012139</p>\n<p>代码&#xff1a;</p>\n<p><a href=\"https://github.com/gaobo1993/os_course_spoc_exercises/blob/master/all/03-1-spoc-buddy_system.cpp\">https://github.com/gaobo1993/os_course_spoc_exercises/blob/master/all/03-1-spoc-buddy_system.cpp</a></p>\n<p>输入文件input在同一个目录下。</p>"}, {"folders": [], "updated": "2016-03-07T12:00:17Z", "uid": "i6w84pnmjCQ", "created": "2016-03-07T12:00:17Z", "type": "feedback", "id": "ilhxrh4vu4x6t3", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p><a href=\"https://github.com/cathayandy/os_2016/tree/master/spoc20160307\" target=\"_blank\">https://github.com/cathayandy/os_2016/tree/master/spoc20160307</a></p>\n<p></p>\n<p>昨天忘了写名&#xff1d; &#xff1d;</p>\n<p>王智默 2012011355</p>\n<p>高越 2012011379</p>"}, {"folders": [], "updated": "2016-03-07T12:05:06Z", "uid": "i6vjwdpfniF", "created": "2016-03-07T12:05:06Z", "type": "feedback", "id": "ilhxxouy5xh2rz", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>终于写好了&#xff0c;传git卡了一会……</p>\n<p>https://github.com/hanzhao0825/os_course_spoc_exercises/blob/master/all/03-1-spoc/buddy.cpp</p>"}, {"folders": [], "updated": "2016-03-07T14:22:39Z", "uid": "i1bzj2xilgm4uk", "created": "2016-03-07T14:22:39Z", "type": "feedback", "id": "ili2uk94ce2lj", "anon": "no", "bucket_name": "Week 3/6 - 3/12", "config": {}, "bucket_order": 56, "data": null, "children": [], "subject": "<p>不好意思……白家松2013011339生病了&#xff0c;我&#xff08;徐涵2013011355&#xff09;有事情耽误了……现在才交……</p>\n<p>我们采用了较为简单的线段树来实现伙伴系统&#xff0c;分别用none和full两个bool值来确定该规模的块是否全部空或者已经填满。如果待分配的块大小大于本块的一半&#xff0c;则视为该快被填满&#xff0c;不再继续向下分配。最小块的起始地址为8的倍数&#xff08;模拟一个字节&#xff09;。释放时&#xff0c;释放块的首地址必须已经被分配过&#xff0c;否则释放失败。如果一个块的左右儿子节点皆为空&#xff0c;则该块为空&#xff0c;即伙伴合并操作。线段树模拟的好处是如果父节点满足分配的需求则不需要传递给子节点&#xff0c;释放时同理。</p>\n<p><a href=\"https://github.com/orangexuhan/os_spoc_answer/blob/master/myBuddy.cpp\" target=\"_blank\">https://github.com/orangexuhan/os_spoc_answer/blob/master/myBuddy.cpp</a></p>"}], "subject": "<p>题目&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题\">https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题</a></p>\n<p></p>\n<p>选择实现“3:buddy systemm”的同学的回答结果写在此贴中对应题目后面。</p>"}], "nr": 659, "bucket_order": 2, "type": "note", "folders": ["lecture5", "课堂问答", "2016"], "no_answer_followup": 0, "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-03-07T01:24:54Z", "is_tag_good": false, "config": {}, "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1488468635698, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>请向勇班的同学把“第五讲 物理内存管理: 连续内存分配”中指定小题的回答结果写在此贴中对应题目后面。<br /> <br />https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题<br /> <br />第三讲的回答的截止时间是今天&#xff08;20160307&#xff09;晚20点前。<br /> <br />要求&#xff1a;<br />1. 两个人一组或独立回答&#xff0c;每组只需要完成指定的一个题目。题目指定方法是&#xff0c;小组成员学号最小值与题号除4后余数相同。<br /> <br />题目&#xff1a;<br />请参考xv6&#xff08;umalloc.c&#xff09;&#xff0c;ucore lab2代码&#xff0c;选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在Linux应用程序/库层面&#xff0c;用C来实现malloc/free&#xff0c;给出你的设计思路&#xff0c;并给出可以在Linux上运行的malloc/free实现和测试用例。 (spoc)</p>\n<p>注意&#xff1a;不同选择的同学的提交位置是不同的。</p>\n<p></p>\n<p>优胜者&#xff1a;</p>\n<p></p>\n<p>选择实现“0:最优匹配”的同学</p>\n<p>叶方轲 2013011340 张殿炎 2013011328<br />2012080059 金嘉宇 2012011321 章晔</p>\n<p></p>\n<p>选择实现“1:最差匹配”的同学<br />2013011416 张浩天 2013011389 郑兆衡<br />杨晓成 2013011383 刘晓鸿 2013010949</p>\n<p></p>\n<p>选择实现“2:最先匹配”的同学<br />2013011310 余翔 2013011308 林婕茵<br />2013011402 钱迪晨 2013011413 高思达<br />Wang Chengrui</p>\n<p></p>\n<p>选择实现“3:buddy systemm”的同学<br />张明钊 2013011303 2013012213<br />徐捷 2012011371&#xff0c;赖国堃 2012011372<br />沈哲言 2013011371 叶子鹏 2013011404<br />白家松2013011339 徐涵2013011355</p>", "anon": "no", "created": "2017-03-02T07:46:40Z", "uid": "hdjonbiyfs62ie", "subject": "2016春季-第五讲课堂思考题回答-向勇班"}, {"content": "<p>请向勇班的同学把“第五讲 物理内存管理: 连续内存分配”中指定小题的回答结果写在此贴中对应题目后面。<br /> <br />https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题<br /> <br />第三讲的回答的截止时间是今天&#xff08;20160307&#xff09;晚20点前。<br /> <br />要求&#xff1a;<br />1. 两个人一组或独立回答&#xff0c;每组只需要完成指定的一个题目。题目指定方法是&#xff0c;小组成员学号最小值与题号除4后余数相同。<br /> <br />题目&#xff1a;<br />请参考xv6&#xff08;umalloc.c&#xff09;&#xff0c;ucore lab2代码&#xff0c;选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在Linux应用程序/库层面&#xff0c;用C来实现malloc/free&#xff0c;给出你的设计思路&#xff0c;并给出可以在Linux上运行的malloc/free实现和测试用例。 (spoc)</p>\n<p>注意&#xff1a;不同选择的同学的提交位置是不同的。</p>\n<p></p>\n<p>优胜者&#xff1a;</p>\n<p></p>\n<p>选择实现“0:最优匹配”的同学</p>\n<p>叶方轲 2013011340 张殿炎 2013011328<br />2012080059 金嘉宇 2012011321 章晔</p>\n<p></p>\n<p>选择实现“1:最差匹配”的同学<br />2013011416 张浩天 2013011389 郑兆衡<br />杨晓成 2013011383 刘晓鸿 2013010949</p>\n<p></p>\n<p>选择实现“2:最先匹配”的同学<br />2013011310 余翔 2013011308 林婕茵<br />2013011402 钱迪晨 2013011413 高思达<br />Wang Chengrui</p>\n<p></p>\n<p>选择实现“3:buddy systemm”的同学<br />张明钊 2013011303 2013012213<br />徐捷 2012011371&#xff0c;赖国堃 2012011372<br />沈哲言 2013011371 叶子鹏 2013011404<br />白家松2013011339 徐涵2013011355</p>", "anon": "no", "created": "2016-03-12T03:06:41Z", "uid": "hdjonbiyfs62ie", "subject": "2016春季-第五讲课堂思考题回答-向勇班"}, {"content": "<p>请向勇班的同学把“第五讲 物理内存管理: 连续内存分配”中指定小题的回答结果写在此贴中对应题目后面。<br /> <br />https://github.com/chyyuu/os_course_spoc_exercises/blob/master/all/03-1-spoc-discussion.md#小组思考题<br /> <br />第三讲的回答的截止时间是今天&#xff08;20160307&#xff09;晚20点前。<br /> <br />要求&#xff1a;<br />1. 两个人一组或独立回答&#xff0c;每组只需要完成指定的一个题目。题目指定方法是&#xff0c;小组成员学号最小值与题号除4后余数相同。<br /> <br />题目&#xff1a;<br />请参考xv6&#xff08;umalloc.c&#xff09;&#xff0c;ucore lab2代码&#xff0c;选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在Linux应用程序/库层面&#xff0c;用C来实现malloc/free&#xff0c;给出你的设计思路&#xff0c;并给出可以在Linux上运行的malloc/free实现和测试用例。 (spoc)</p>\n<p>注意&#xff1a;不同选择的同学的提交位置是不同的。</p>\n<p></p>\n<p>优胜者&#xff1a;</p>\n<p></p>", "anon": "no", "created": "2016-03-07T01:24:54Z", "uid": "hdjonbiyfs62ie", "subject": "2016春季-第五讲课堂思考题回答-向勇班"}]}, "error": null}